{"version":3,"sources":["api/api.js","components/Header/UserDropdown.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Genres.jsx","components/Filters/GenresHOC.jsx","components/Filters/SortByYear.jsx","components/Pagination/Pagination.jsx","components/Filters/ResetFilters.jsx","components/Filters/Filters.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","arguments","length","undefined","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","_options$params","params","queryStringParams","Object","objectSpread","api_key","concat","queryString","stringify","mode","headers","Content-type","_options$params2","_options$body","body","method","JSON","UserMenu","state","dropdownOpen","toggleDropdown","_this","setState","prevState","handleLogOut","session_id","props","onLogOut","user","this","react_default","a","createElement","Dropdown","isOpen","toggle","DropdownToggle","tag","onClick","data-toggle","aria-expanded","width","className","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","React","Component","UserMenuContainer","AppContext","Consumer","context","UserDropdown_UserMenu","assign","displayName","LoginForm","username","password","errors","submitting","onChange","e","name","target","value","defineProperty","handleBlur","validateFields","onSubmit","request_token","updateSessionId","updateUser","console","log","base","status_message","onLogin","preventDefault","keys","_this$state","htmlFor","type","id","placeholder","onBlur","disabled","Login_LoginForm","LoginForm_LoginForm","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleModal","showModal","Modal","ModalBody","Header","href","UserDropdown","Login_Login","SortBy","_this$props","sort_by","onChangeFilters","map","option","key","label","defaultProps","Genres","_ref","genres","onChangeGenresFilters","with_genres","genre","checked","includes","toString","GenresHOC","_React$Component","event","filter","toConsumableArray","getGenres","link","inherits","createClass","year","Date","getFullYear","years","Array","from","val","index","SortByYear","primary_release_year","Pagination","paginationBack","onChangePagination","page","paginationForward","_this$props2","_this$props3","total_pages","role","aria-label","ResetFilters","resetFilters","Filters","_this$props$filters","filters","_this$props$paginatio","pagination","SortBy_SortBy","SortByYear_SortByYear","Filters_Genres","Pagination_Pagination","ResetFilters_ResetFilters","MovieItem","item","style","backdrop_path","poster_path","title","vote_average","release_date","MoviesList","movies","Spinner","color","movie","MovieItem_MovieItem","defaulProps","MoviesHOC","getMovies","language","get","results","prevProps","_","isEqual","cookies","Cookies","createContext","App","set","path","maxAge","remove","newFilters","_this2","Provider","components_Header_Header","Filters_Filters","Movies_MoviesList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.662f76fd.chunk.js","sourcesContent":["import queryString from \"query-string\";\n\nexport const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '5265606bb69e99437c85eb04dc6f29b5';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MjY1NjA2YmI2OWU5OTQzN2M4NWViMDRkYzZmMjliNSIsInN1YiI6IjViMjdkM2IwMGUwYTI2NjcwOTAxY2JlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Io03eoINOt7D4nPuexS3qHeD371BOBaFsz8Oz2cJlNM';\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise ((resolve, reject) => {\n    fetch (url, options)\n      .then (response => {\n        if (response.status < 400) {\n          return response.json ();\n        } else {\n          throw response;\n        }\n      })\n      .then (data => {\n        resolve (data);\n      })\n      .catch (response => {\n        response.json ().then (error => {\n          reject (error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const { params = {} } = options;\n    const queryStringParams = {\n      \"api_key\": API_KEY_3,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n  }\n\n  static post(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      \"api_key\": API_KEY_3,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify (body),\n    })\n  }\n}\n","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport {AppContext} from \"../App\";\nimport {API_URL, API_KEY_3, fetchApi} from '../../api/api';\n\nclass UserMenu extends React.Component {\n  state = {\n    dropdownOpen: false\n  };\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  handleLogOut = () => {\n    fetchApi(`${API_URL}/authentication/session?api_key=${API_KEY_3}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        session_id: this.props.session_id\n      })\n    }).then(() => {\n      this.props.onLogOut();\n    })\n  };\n\n  render() {\n    const {user} = this.props;\n\n    return (\n      <Dropdown\n        isOpen={this.state.dropdownOpen}\n        toggle={this.toggleDropdown}\n      >\n        <DropdownToggle\n          tag=\"div\"\n          onClick={this.toggleDropdown}\n          data-toggle=\"dropdown\"\n          aria-expanded={this.state.dropdownOpen}\n        >\n          <img\n            width=\"40\"\n            className=\"rounded-circle\"\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n            alt=\"avatar\"\n            onClick={this.toggleDropdown}\n          >\n          </img>\n        </DropdownToggle>\n        <DropdownMenu\n          right\n        >\n          <DropdownItem\n            onClick={this.handleLogOut}\n          >\n            Выйти\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nconst UserMenuContainer = (props) => {\n  return (\n    <AppContext.Consumer>\n      {(context) => {\n        return (\n          <UserMenu\n            {...context}\n            {...props}\n          />\n        )\n      }}\n    </AppContext.Consumer>\n  )\n};\n\nUserMenuContainer.displayName = \"UserMenuContainer\";\n\nexport default UserMenuContainer;\n","import React from 'react';\nimport { API_URL, API_KEY_3, fetchApi } from \"../../../api/api\";\nimport { AppContext } from '../../App';\n\nclass LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {},\n    submitting: false,\n  };\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState ({\n      [name]: value,\n    });\n  };\n\n  handleBlur = e => {\n    const errors = this.validateFields ();\n    const name = e.target.name;\n    if (errors[name]) {\n      this.setState (state => ({\n        errors: {\n          ...state.errors,\n          [name]: errors[name]\n        },\n      }));\n    }\n  };\n\n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Not empty';\n    }\n\n    if (this.state.password === '') {\n      errors.password = 'Not empty';\n    }\n\n    return errors;\n  };\n\n  onSubmit = () => {\n    this.setState({\n      submitting: true\n    });\n    fetchApi(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n      .then(data => {\n        return fetchApi(\n          `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n          {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              username: this.state.username,\n              password: this.state.password,\n              request_token: data.request_token\n            })\n          }\n        );\n      })\n      .then(data => {\n        return fetchApi(\n          `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n          {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              request_token: data.request_token\n            })\n          }\n        );\n      })\n      .then(data => {\n        this.props.updateSessionId(data.session_id);\n        return fetchApi(\n          `${API_URL}/account?api_key=${API_KEY_3}&session_id=${\n            data.session_id\n          }`\n        );\n      })\n      .then(user => {\n        this.setState(\n          {\n            submitting: false\n          },\n          () => {\n            this.props.updateUser(user);\n          }\n        );\n      })\n      .catch(error => {\n        console.log(\"error\", error);\n        this.setState({\n          submitting: false,\n          errors: {\n            base: error.status_message\n          }\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault ();\n    const errors = this.validateFields ();\n    if (Object.keys (errors).length > 0) {\n      this.setState (prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    } else {\n      this.onSubmit ();\n    }\n  };\n\n  render() {\n    const { username, password, errors, submitting } = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Пользователь</label>\n            <input\n              type=\"text\"\n              className={\n                errors.username ? \"form-control is-invalid\" : \"form-control\"\n              }\n              id=\"username\"\n              placeholder=\"Пользователь\"\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.username &&\n            <div className=\"invalid-feedback\">{errors.username}</div>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Пароль</label>\n            <input\n              type=\"password\"\n              className={\n                errors.password ? \"form-control is-invalid\" : \"form-control\"\n              }\n              id=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.password &&\n            <div className=\"invalid-feedback\">{errors.password}</div>}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base &&\n          <div className=\"invalid-feedback text-center\">{errors.base}</div>}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default (props) => {\n  return (\n    <AppContext.Consumer>\n      {(context) => <LoginForm updateUser={context.updateUser} {...props}/>}\n    </AppContext.Consumer>\n  )\n}\n","import React from 'react';\nimport {Modal, ModalBody} from 'reactstrap';\nimport LoginForm from './LoginForm';\n\nexport default class Login extends React.Component {\n  constructor() {\n    super ();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState (prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"btn btn-success\"\n          type=\"button\"\n          onClick={this.toggleModal}\n        >\n          Login\n        </button>\n        <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n          <ModalBody>\n            <LoginForm\n              updateUser={this.props.updateUser}\n              updateSessionId={this.props.updateSessionId}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport UserMenu from './UserDropdown';\nimport Login from './Login/Login';\n\nclass Header extends React.Component {\n  render() {\n    const {user} = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Home</a>\n            </li>\n          </ul>\n          {user\n            ? <UserMenu />\n            : <Login updateSessionId={this.props.updateSessionId} updateUser={this.props.updateUser}/>}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends React.Component {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярные по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярные по возростанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возростанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render() {\n    const {sort_by, onChangeFilters, options} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilters}\n        >\n          {options.map (option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenresHOC from './GenresHOC';\n\nconst Genres = ({ genres, onChangeGenresFilters, with_genres }) => {\n  return (\n    <div>\n      {genres.map (genre => {\n        return (\n          <div className=\"form-check\" key={genre.id}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              onChange={onChangeGenresFilters}\n              name=\"with_genres\"\n              value={genre.id}\n              checked={with_genres.includes(genre.id.toString())}\n              id={genre.id}\n            />\n            <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n              {genre.name}\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nGenres.defaultProps = {\n  genres: []\n};\n\nGenres.propTypes = {\n  genres: PropTypes.array.isRequired\n};\n\nexport default GenresHOC(Genres);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {API_URL, API_KEY_3} from '../../api/api';\n\nexport default (Component) => class GenresHOC extends React.Component {\n  static propTypes = {\n    with_genres: PropTypes.array.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super ();\n\n    this.state = {\n      genres: [],\n    };\n  }\n\n  onChangeGenresFilters = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const with_genres = this.props.with_genres;\n\n    this.props.onChangeFilters ({\n      target: {\n        name,\n        value: with_genres.includes (value)\n          ? with_genres.filter (genre => genre !== value)\n          : [...with_genres, value],\n      },\n    });\n  };\n\n  getGenres = () => {\n    const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\n\n    fetch (link)\n      .then (response => {\n        return response.json ();\n      })\n      .then (data => {\n        this.setState ({\n          genres: data.genres,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getGenres ();\n  }\n\n  render() {\n    return (\n      <Component\n        genres={this.state.genres}\n        onChangeGenresFilters={this.onChangeGenresFilters}\n        with_genres={this.props.with_genres}\n      />\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst year = new Date ().getFullYear ();\nconst years = Array.from (new Array (20), (val, index) => year - index);\n\nexport default class SortByYear extends React.Component {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {primary_release_year, onChangeFilters} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год выпуска:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilters}\n        >\n          {years.map (year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Pagination extends React.Component {\n  paginationBack = () => {\n    const {onChangePagination, page} = this.props;\n    return onChangePagination ({name: 'page', value: page - 1});\n  };\n\n  paginationForward = () => {\n    const {onChangePagination, page} = this.props;\n    return onChangePagination ({name: 'page', value: page + 1});\n  };\n\n  render() {\n    const {page, total_pages} = this.props;\n\n    return (\n      <div>\n        <div\n          className=\"btn-group btn-block\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            disabled={page === 1}\n            onClick={this.paginationBack}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={this.paginationForward}\n          >\n            Вперед\n          </button>\n        </div>\n        <p className=\"text-center p-3 text-center\">{`${page} из ${total_pages}`}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ResetFilters extends React.Component {\n  static propTypes = {\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div\n        className=\"btn-group btn-block\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-block\"\n          onClick={this.props.resetFilters}\n        >\n          Сбросить фильтры\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport Genres from './Genres';\nimport SortByYear from './SortByYear';\nimport Pagination from '../Pagination/Pagination';\nimport ResetFilters from './ResetFilters';\n\nexport default class Filters extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n    onChangePagination: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      filters: {sort_by, primary_release_year, with_genres},\n      pagination: {page, total_pages},\n      onChangePagination,\n      resetFilters,\n      onChangeFilters,\n    } = this.props;\n\n    return (\n      <form className=\"mb-3\">\n        <SortBy\n          sort_by={sort_by}\n          onChangeFilters={onChangeFilters}\n        />\n        <SortByYear\n          primary_release_year={primary_release_year}\n          onChangeFilters={onChangeFilters}\n        />\n        <Genres\n          with_genres={with_genres}\n          onChangeFilters={onChangeFilters}\n        />\n        <Pagination\n          onChangePagination={onChangePagination}\n          total_pages={total_pages}\n          page={page}\n        />\n        <ResetFilters\n          resetFilters={resetFilters}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MovieItem extends React.Component {\n  render() {\n    const {item} = this.props;\n    return (\n      <div className=\"card\" style={{width: '100%'}}>\n        <img\n          className=\"card-img-top card-img--height\"\n          src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || item.poster_path}`}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{item.title}</h6>\n          <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n          <div className=\"card-text\">Релиз: {item.release_date}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport MovieItem from './MovieItem';\nimport { Spinner } from 'reactstrap';\nimport PropsTypes from 'prop-types';\nimport MoviesHOC from './MoviesHOC';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <div>\n      <div className=\"loader-wrapper\">\n        {movies.length === 0 && <Spinner color=\"primary\" />}\n      </div>\n      <div className=\"row\">\n        {movies.map (movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  )\n};\n\nMoviesList.defaulProps = {\n  movies: []\n};\n\nMoviesList.propTypes = {\n  movies: PropsTypes.array.isRequired\n};\n\nexport default MoviesHOC(MoviesList);\n","import React, {Component} from 'react';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport CallApi, {API_URL, API_KEY_3} from '../../api/api';\n\nexport default (Component) => class MoviesHOC extends React.Component {\n  constructor() {\n    super ();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  getMovies = (filters, pagination) => {\n    const {sort_by, primary_release_year, with_genres} = filters;\n    const {page} = pagination;\n    const queryStringParams = {\n      \"api_key\": API_KEY_3,\n      \"sort_by\":sort_by,\n      \"page\": page,\n      \"primary_release_year\": primary_release_year,\n      \"with_genres\": with_genres,\n      \"language\": \"ru-RU\"\n    };\n\n    CallApi.get('/discover/movie', {\n      params: queryStringParams\n    })\n      .then (data => {\n        this.setState ({\n          movies: data.results,\n        });\n        this.props.onChangePagination ({\n          name: 'total_pages',\n          value: data.total_pages,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getMovies (this.props.filters, this.props.pagination);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual (this.props.filters, prevProps.filters)) {\n      this.getMovies (this.props.filters, 1);\n      this.props.onChangePagination (1);\n    }\n\n    if (this.props.pagination.page !== prevProps.pagination.page) {\n      this.getMovies (this.props.filters, this.props.pagination);\n    }\n  }\n\n  render() {\n    const {movies} = this.state;\n    return (\n      <Component movies={movies} />\n    );\n  }\n}\n","import React from 'react';\nimport Header from './Header/Header';\nimport Filters from './Filters/Filters';\nimport MoviesList from './Movies/MoviesList';\nimport Cookies from 'universal-cookie';\nimport {API_URL, API_KEY_3, fetchApi} from '../api/api';\n\nconst cookies = new Cookies ();\n\nexport const AppContext = React.createContext();\nexport default class App extends React.Component {\n  constructor() {\n    super ();\n\n    this.state = {\n      user: null,\n      session_id: null,\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    };\n  }\n\n  updateUser = user => {\n    this.setState ({user});\n  };\n\n  updateSessionId = session_id => {\n    cookies.set ('session_id', session_id, {path: '/', maxAge: 2592000});\n    this.setState ({session_id});\n  };\n\n  onLogOut = () => {\n    cookies.remove('session_id');\n    this.setState({\n      session_id: null,\n      user: null\n    })\n  };\n\n  onChangeFilters = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const newFilters = {\n      ...this.state.filters,\n      [name]: value,\n    };\n    this.setState ({\n      filters: newFilters,\n    });\n  };\n\n  resetFilters = () => {\n    this.setState (prevProps => ({\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    }));\n  };\n\n  onChangePagination = ({name, value}) => {\n    this.setState (prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        [name]: value,\n      },\n    }));\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get ('session_id');\n    if (session_id) {\n      fetchApi (\n        `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\n      ).then (user => {\n        this.updateUser (user);\n        this.updateSessionId(session_id);\n      });\n    }\n  }\n\n  render() {\n    const {filters, pagination, page, total_pages, user, session_id} = this.state;\n    return (\n      <AppContext.Provider value={{\n        user,\n        session_id,\n        updateUser: this.updateUser,\n        updateSessionId: this.updateSessionId,\n        onLogOut: this.onLogOut\n      }}>\n        <div>\n          <Header\n            updateUser={this.updateUser}\n            updateSessionId={this.updateSessionId}\n            user={user}\n          />\n          <div className=\"container\">\n            <div className=\"row mt-4\">\n              <div className=\"col-4\">\n                <div className=\"card\" style={{width: '100%'}}>\n                  <div className=\"card-body\">\n                    <h3>Фильтры:</h3>\n                    <Filters\n                      page={page}\n                      total_pages={total_pages}\n                      pagination={pagination}\n                      filters={filters}\n                      resetFilters={this.resetFilters}\n                      onChangePagination={this.onChangePagination}\n                      onChangeFilters={this.onChangeFilters}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-8\">\n                <MoviesList\n                  pagination={pagination}\n                  movies={this.state.movies}\n                  getMovies={this.getMovies}\n                  filters={this.state.filters}\n                  onChangePagination={this.onChangePagination}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}