{"version":3,"sources":["api/api.js","components/Header/UserDropdown.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Genres.jsx","components/Filters/GenresHOC.jsx","components/Filters/SortByYear.jsx","components/Pagination/Pagination.jsx","components/Filters/ResetFilters.jsx","components/Filters/Filters.jsx","components/Movies/Favorite.jsx","components/Movies/Watchlist.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","UserMenu","state","dropdownOpen","toggleDropdown","setState","prevState","handleLogOut","session_id","props","onLogOut","user","this","Dropdown","isOpen","toggle","DropdownToggle","tag","onClick","data-toggle","aria-expanded","width","className","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","React","Component","UserMenuContainer","AppContext","Consumer","context","displayName","LoginForm","username","password","errors","submitting","onChange","e","name","target","value","handleBlur","validateFields","onSubmit","request_token","updateSessionId","updateUser","console","log","base","status_message","onLogin","preventDefault","Object","keys","length","htmlFor","type","id","placeholder","onBlur","disabled","Login","toggleModal","showModal","Modal","ModalBody","Header","href","SortBy","sort_by","onChangeFilters","map","option","key","label","defaultProps","Genres","genres","onChangeGenresFilters","with_genres","genre","checked","includes","toString","GenresHOC","event","filter","getGenres","link","year","Date","getFullYear","years","Array","from","val","index","SortByYear","primary_release_year","Pagination","paginationBack","onChangePagination","page","paginationForward","total_pages","role","aria-label","ResetFilters","resetFilters","Filters","filters","pagination","Favorite","addToFav","item","media_type","media_id","favorite","isFavorite","removeFromFav","prevProps","snapshot","favoritesMovies","movie","IconButton","StarBorder","Star","FavoriteContainer","Watchlist","watchlist","isInWatchlist","watchlistMovies","BookmarkBorder","Bookmark","WatchlistContainer","MovieItem","style","backdrop_path","poster_path","title","vote_average","release_date","ButtonGroup","MoviesList","movies","Spinner","color","defaulProps","MoviesHOC","getMovies","language","get","results","_","isEqual","cookies","Cookies","createContext","App","set","path","maxAge","updateFavoritesMovies","updateWatchlistMovies","remove","newFilters","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f674643a.chunk.js","sourcesContent":["import queryString from 'query-string';\n\nexport const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '5265606bb69e99437c85eb04dc6f29b5';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MjY1NjA2YmI2OWU5OTQzN2M4NWViMDRkYzZmMjliNSIsInN1YiI6IjViMjdkM2IwMGUwYTI2NjcwOTAxY2JlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Io03eoINOt7D4nPuexS3qHeD371BOBaFsz8Oz2cJlNM';\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        // console.log(data);\n        resolve(data);\n      })\n      .catch(response => {\n        response.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const { params = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params,\n    };\n\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        mode: 'cors',\n        headers: {\n          'Content-type': 'application/json',\n        },\n      }\n    );\n  }\n\n  static post(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params,\n    };\n\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      }\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { AppContext } from '../App';\nimport { API_URL, API_KEY_3, fetchApi } from '../../api/api';\n\nclass UserMenu extends React.Component {\n  state = {\n    dropdownOpen: false,\n  };\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  };\n\n  handleLogOut = () => {\n    fetchApi(`${API_URL}/authentication/session?api_key=${API_KEY_3}`, {\n      method: 'DELETE',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        session_id: this.props.session_id,\n      }),\n    }).then(() => {\n      this.props.onLogOut();\n    });\n  };\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n        <DropdownToggle\n          tag=\"div\"\n          onClick={this.toggleDropdown}\n          data-toggle=\"dropdown\"\n          aria-expanded={this.state.dropdownOpen}\n        >\n          <img\n            width=\"40\"\n            className=\"rounded-circle\"\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n            alt=\"avatar\"\n            onClick={this.toggleDropdown}\n          ></img>\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={this.handleLogOut}>Выйти</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nconst UserMenuContainer = props => {\n  return (\n    <AppContext.Consumer>\n      {context => {\n        return <UserMenu {...context} {...props} />;\n      }}\n    </AppContext.Consumer>\n  );\n};\n\nUserMenuContainer.displayName = 'UserMenuContainer';\n\nexport default UserMenuContainer;\n","import React from 'react';\nimport { API_URL, API_KEY_3, fetchApi } from '../../../api/api';\nimport { AppContext } from '../../App';\n\nclass LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {},\n    submitting: false,\n  };\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleBlur = e => {\n    const errors = this.validateFields();\n    const name = e.target.name;\n    if (errors[name]) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: errors[name],\n        },\n      }));\n    }\n  };\n\n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Not empty';\n    }\n\n    if (this.state.password === '') {\n      errors.password = 'Not empty';\n    }\n\n    return errors;\n  };\n\n  onSubmit = () => {\n    this.setState({\n      submitting: true,\n    });\n    fetchApi(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n      .then(data => {\n        return fetchApi(\n          `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n          {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify({\n              username: this.state.username,\n              password: this.state.password,\n              request_token: data.request_token,\n            }),\n          }\n        );\n      })\n      .then(data => {\n        return fetchApi(\n          `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n          {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify({\n              request_token: data.request_token,\n            }),\n          }\n        );\n      })\n      .then(data => {\n        this.props.updateSessionId(data.session_id);\n        return fetchApi(\n          `${API_URL}/account?api_key=${API_KEY_3}&session_id=${data.session_id}`\n        );\n      })\n      .then(user => {\n        this.setState(\n          {\n            submitting: false,\n          },\n          () => {\n            this.props.updateUser(user);\n          }\n        );\n      })\n      .catch(error => {\n        console.log('error', error);\n        this.setState({\n          submitting: false,\n          errors: {\n            base: error.status_message,\n          },\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault();\n    const errors = this.validateFields();\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    } else {\n      this.onSubmit();\n    }\n  };\n\n  render() {\n    const { username, password, errors, submitting } = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Пользователь</label>\n            <input\n              type=\"text\"\n              className={\n                errors.username ? 'form-control is-invalid' : 'form-control'\n              }\n              id=\"username\"\n              placeholder=\"Пользователь\"\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.username && (\n              <div className=\"invalid-feedback\">{errors.username}</div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Пароль</label>\n            <input\n              type=\"password\"\n              className={\n                errors.password ? 'form-control is-invalid' : 'form-control'\n              }\n              id=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.password && (\n              <div className=\"invalid-feedback\">{errors.password}</div>\n            )}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base && (\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default props => {\n  return (\n    <AppContext.Consumer>\n      {context => <LoginForm updateUser={context.updateUser} {...props} />}\n    </AppContext.Consumer>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\nimport LoginForm from './LoginForm';\n\nexport default class Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"btn btn-success\"\n          type=\"button\"\n          onClick={this.toggleModal}\n        >\n          Login\n        </button>\n        <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n          <ModalBody>\n            <LoginForm\n              updateUser={this.props.updateUser}\n              updateSessionId={this.props.updateSessionId}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport UserMenu from './UserDropdown';\nimport Login from './Login/Login';\n\nclass Header extends React.Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">\n                Home\n              </a>\n            </li>\n          </ul>\n          {user ? (\n            <UserMenu />\n          ) : (\n            <Login\n              updateSessionId={this.props.updateSessionId}\n              updateUser={this.props.updateUser}\n            />\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends React.Component {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярные по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярные по возростанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возростанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render() {\n    const { sort_by, onChangeFilters, options } = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilters}\n        >\n          {options.map(option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenresHOC from './GenresHOC';\n\nconst Genres = ({ genres, onChangeGenresFilters, with_genres }) => {\n  return (\n    <div>\n      {genres.map(genre => {\n        return (\n          <div className=\"form-check\" key={genre.id}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              onChange={onChangeGenresFilters}\n              name=\"with_genres\"\n              value={genre.id}\n              checked={with_genres.includes(genre.id.toString())}\n              id={genre.id}\n            />\n            <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n              {genre.name}\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nGenres.defaultProps = {\n  genres: [],\n};\n\nGenres.propTypes = {\n  genres: PropTypes.array.isRequired,\n};\n\nexport default GenresHOC(Genres);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { API_URL, API_KEY_3 } from '../../api/api';\n\nexport default Component =>\n  class GenresHOC extends React.Component {\n    static propTypes = {\n      with_genres: PropTypes.array.isRequired,\n      onChangeFilters: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n      super();\n\n      this.state = {\n        genres: [],\n      };\n    }\n\n    onChangeGenresFilters = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      const with_genres = this.props.with_genres;\n\n      this.props.onChangeFilters({\n        target: {\n          name,\n          value: with_genres.includes(value)\n            ? with_genres.filter(genre => genre !== value)\n            : [...with_genres, value],\n        },\n      });\n    };\n\n    getGenres = () => {\n      const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\n\n      fetch(link)\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          this.setState({\n            genres: data.genres,\n          });\n        });\n    };\n\n    componentDidMount() {\n      this.getGenres();\n    }\n\n    render() {\n      return (\n        <Component\n          genres={this.state.genres}\n          onChangeGenresFilters={this.onChangeGenresFilters}\n          with_genres={this.props.with_genres}\n        />\n      );\n    }\n  };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(20), (val, index) => year - index);\n\nexport default class SortByYear extends React.Component {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { primary_release_year, onChangeFilters } = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год выпуска:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilters}\n        >\n          {years.map(year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Pagination extends React.Component {\n  paginationBack = () => {\n    const { onChangePagination, page } = this.props;\n    return onChangePagination({ name: 'page', value: page - 1 });\n  };\n\n  paginationForward = () => {\n    const { onChangePagination, page } = this.props;\n    return onChangePagination({ name: 'page', value: page + 1 });\n  };\n\n  render() {\n    const { page, total_pages } = this.props;\n\n    return (\n      <div>\n        <div\n          className=\"btn-group btn-block\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            disabled={page === 1}\n            onClick={this.paginationBack}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={this.paginationForward}\n          >\n            Вперед\n          </button>\n        </div>\n        <p className=\"text-center p-3 text-center\">{`${page} из ${total_pages}`}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ResetFilters extends React.Component {\n  static propTypes = {\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div\n        className=\"btn-group btn-block\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-block\"\n          onClick={this.props.resetFilters}\n        >\n          Сбросить фильтры\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport Genres from './Genres';\nimport SortByYear from './SortByYear';\nimport Pagination from '../Pagination/Pagination';\nimport ResetFilters from './ResetFilters';\n\nexport default class Filters extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n    onChangePagination: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      filters: { sort_by, primary_release_year, with_genres },\n      pagination: { page, total_pages },\n      onChangePagination,\n      resetFilters,\n      onChangeFilters,\n    } = this.props;\n\n    return (\n      <form className=\"mb-3\">\n        <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters} />\n        <SortByYear\n          primary_release_year={primary_release_year}\n          onChangeFilters={onChangeFilters}\n        />\n        <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\n        <Pagination\n          onChangePagination={onChangePagination}\n          total_pages={total_pages}\n          page={page}\n        />\n        <ResetFilters resetFilters={resetFilters} />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { API_URL, API_KEY_3, fetchApi } from '../../api/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Star, StarBorder } from '@material-ui/icons';\nimport { AppContext } from '../App';\nimport { Modal, ModalBody } from 'reactstrap';\nimport LoginForm from '../Header/Login/LoginForm';\n\nclass Favorite extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isFavorite: null,\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  addToFav = (item, session_id) => {\n    if (session_id) {\n      // console.log(item);\n      fetchApi(\n        `${API_URL}/account/7933447/favorite?api_key=${API_KEY_3}&session_id=${session_id}`,\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            media_type: 'movie',\n            media_id: item.id,\n            favorite: true,\n          }),\n        }\n      ).then(() => {\n        this.setState({\n          isFavorite: true,\n        });\n      });\n    } else {\n      this.toggleModal();\n    }\n  };\n\n  removeFromFav = (item, session_id) => {\n    if (session_id) {\n      // console.log(item);\n      fetchApi(\n        `${API_URL}/account/7933447/favorite?api_key=${API_KEY_3}&session_id=${session_id}`,\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            media_type: 'movie',\n            media_id: item.id,\n            favorite: false,\n          }),\n        }\n      ).then(() => {\n        this.setState({\n          isFavorite: false,\n        });\n      });\n    } else {\n      this.toggleModal();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.favoritesMovies !== prevProps.favoritesMovies) {\n      const { item, favoritesMovies } = this.props;\n      if (favoritesMovies) {\n        let favoritesMoviesIds = favoritesMovies.map(movie => {\n          return movie.id;\n        });\n        // console.log(favoritesMoviesIds);\n        if (favoritesMoviesIds.includes(item.id)) {\n          this.setState({\n            isFavorite: true,\n          });\n        } else {\n          this.setState({\n            isFavorite: false,\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const { item, session_id, user } = this.props;\n    const { isFavorite } = this.state;\n\n    if (isFavorite) {\n      return (\n        <div>\n          <IconButton\n            aria-label=\"\"\n            onClick={() => this.removeFromFav(item, session_id)}\n          >\n            <StarBorder />\n          </IconButton>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {user ? null : (\n            <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n              <ModalBody>\n                <LoginForm\n                  updateUser={this.props.updateUser}\n                  updateSessionId={this.props.updateSessionId}\n                />\n              </ModalBody>\n            </Modal>\n          )}\n          <IconButton\n            aria-label=\"\"\n            onClick={() => this.addToFav(item, session_id)}\n          >\n            <Star />\n          </IconButton>\n        </div>\n      );\n    }\n  }\n}\n\nconst FavoriteContainer = props => {\n  return (\n    <AppContext.Consumer>\n      {context => {\n        return <Favorite {...context} {...props} />;\n      }}\n    </AppContext.Consumer>\n  );\n};\n\nFavoriteContainer.displayName = 'FavoriteContainer';\n\nexport default FavoriteContainer;\n","import React from 'react';\nimport { API_URL, API_KEY_3, fetchApi } from '../../api/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Bookmark, BookmarkBorder } from '@material-ui/icons';\nimport { AppContext } from '../App';\nimport { Modal, ModalBody } from 'reactstrap';\nimport LoginForm from '../Header/Login/LoginForm';\n\nclass Watchlist extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isInWatchlist: null,\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  addToFav = (item, session_id) => {\n    if (session_id) {\n      // console.log(item);\n      fetchApi(\n        `${API_URL}/account/7933447/watchlist?api_key=${API_KEY_3}&session_id=${session_id}`,\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            media_type: 'movie',\n            media_id: item.id,\n            watchlist: true,\n          }),\n        }\n      ).then(() => {\n        this.setState({\n          isInWatchlist: true,\n        });\n      });\n    } else {\n      this.toggleModal();\n    }\n  };\n\n  removeFromFav = (item, session_id) => {\n    if (session_id) {\n      // console.log(item);\n      fetchApi(\n        `${API_URL}/account/7933447/watchlist?api_key=${API_KEY_3}&session_id=${session_id}`,\n        {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            media_type: 'movie',\n            media_id: item.id,\n            watchlist: false,\n          }),\n        }\n      ).then(() => {\n        this.setState({\n          isInWatchlist: false,\n        });\n      });\n    } else {\n      this.toggleModal();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!(this.props.watchlistMovies === prevProps.watchlistMovies)) {\n      const { item, watchlistMovies } = this.props;\n      if (watchlistMovies) {\n        let watchlistMoviesIds = watchlistMovies.map(movie => {\n          return movie.id;\n        });\n        // console.log(watchlistMoviesIds);\n        if (watchlistMoviesIds.includes(item.id)) {\n          this.setState({\n            isInWatchlist: true,\n          });\n        } else {\n          this.setState({\n            isInWatchlist: false,\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const { item, session_id, user } = this.props;\n    const { isInWatchlist } = this.state;\n\n    if (isInWatchlist) {\n      return (\n        <div>\n          <IconButton\n            aria-label=\"\"\n            onClick={() => this.removeFromFav(item, session_id)}\n          >\n            <BookmarkBorder />\n          </IconButton>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {user ? null : (\n            <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n              <ModalBody>\n                <LoginForm\n                  updateUser={this.props.updateUser}\n                  updateSessionId={this.props.updateSessionId}\n                />\n              </ModalBody>\n            </Modal>\n          )}\n          <IconButton\n            aria-label=\"\"\n            onClick={() => this.addToFav(item, session_id)}\n          >\n            <Bookmark />\n          </IconButton>\n        </div>\n      );\n    }\n  }\n}\n\nconst WatchlistContainer = props => {\n  return (\n    <AppContext.Consumer>\n      {context => {\n        return <Watchlist {...context} {...props} />;\n      }}\n    </AppContext.Consumer>\n  );\n};\n\nWatchlistContainer.displayName = 'WatchlistContainer';\n\nexport default WatchlistContainer;\n","import React from 'react';\nimport { ButtonGroup } from 'reactstrap';\nimport Favorite from './Favorite';\nimport Watchlist from './Watchlist';\n\nconst MovieItem = props => {\n  const { item } = props;\n  return (\n    <div className=\"card\" style={{ width: '100%' }}>\n      <img\n        className=\"card-img-top card-img--height\"\n        src={`https://image.tmdb.org/t/p/w500${item.backdrop_path ||\n          item.poster_path}`}\n        alt=\"\"\n      />\n      <div className=\"card-body\">\n        <h6 className=\"card-title\">{item.title}</h6>\n        <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n        <div className=\"card-text\">Релиз: {item.release_date}</div>\n      </div>\n      <ButtonGroup>\n        <Favorite item={item} />\n        <Watchlist item={item} />\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport MovieItem from './MovieItem';\nimport { Spinner } from 'reactstrap';\nimport PropsTypes from 'prop-types';\nimport MoviesHOC from './MoviesHOC';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <div>\n      <div className=\"loader-wrapper\">\n        {movies.length === 0 && <Spinner color=\"primary\" />}\n      </div>\n      <div className=\"row\">\n        {movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nMoviesList.defaulProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropsTypes.array.isRequired,\n};\n\nexport default MoviesHOC(MoviesList);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport CallApi, { API_URL, API_KEY_3 } from '../../api/api';\n\nexport default Component =>\n  class MoviesHOC extends React.Component {\n    constructor() {\n      super();\n\n      this.state = {\n        movies: [],\n      };\n    }\n\n    getMovies = (filters, pagination) => {\n      const { sort_by, primary_release_year, with_genres } = filters;\n      const { page } = pagination;\n      const queryStringParams = {\n        api_key: API_KEY_3,\n        sort_by: sort_by,\n        page: page,\n        primary_release_year: primary_release_year,\n        with_genres: with_genres,\n        language: 'ru-RU',\n      };\n\n      CallApi.get('/discover/movie', {\n        params: queryStringParams,\n      }).then(data => {\n        this.setState({\n          movies: data.results,\n        });\n        this.props.onChangePagination({\n          name: 'total_pages',\n          value: data.total_pages,\n        });\n      });\n    };\n\n    componentDidMount() {\n      this.getMovies(this.props.filters, this.props.pagination);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!_.isEqual(this.props.filters, prevProps.filters)) {\n        this.getMovies(this.props.filters, 1);\n        this.props.onChangePagination(1);\n      }\n\n      if (this.props.pagination.page !== prevProps.pagination.page) {\n        this.getMovies(this.props.filters, this.props.pagination);\n      }\n    }\n\n    render() {\n      const { movies } = this.state;\n      return <Component movies={movies} />;\n    }\n  };\n","import React from 'react';\nimport Header from './Header/Header';\nimport Filters from './Filters/Filters';\nimport MoviesList from './Movies/MoviesList';\nimport Cookies from 'universal-cookie';\nimport { API_URL, API_KEY_3, fetchApi } from '../api/api';\n\nconst cookies = new Cookies();\n\nexport const AppContext = React.createContext();\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: null,\n      favoritesMovies: null,\n      watchlistMovies: null,\n      session_id: null,\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    };\n  }\n\n  updateUser = user => {\n    this.setState({ user });\n  };\n\n  updateSessionId = session_id => {\n    cookies.set('session_id', session_id, { path: '/', maxAge: 2592000 });\n    this.setState({ session_id });\n  };\n\n  updateFavoritesMovies = favoritesMovies => {\n    this.setState({ favoritesMovies });\n  };\n\n  updateWatchlistMovies = watchlistMovies => {\n    this.setState({ watchlistMovies });\n  };\n\n  onLogOut = () => {\n    cookies.remove('session_id');\n    this.setState({\n      session_id: null,\n      user: null,\n    });\n  };\n\n  onChangeFilters = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const newFilters = {\n      ...this.state.filters,\n      [name]: value,\n    };\n    this.setState({\n      filters: newFilters,\n    });\n  };\n\n  resetFilters = () => {\n    this.setState(prevProps => ({\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    }));\n  };\n\n  onChangePagination = ({ name, value }) => {\n    this.setState(prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        [name]: value,\n      },\n    }));\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get('session_id');\n    if (session_id) {\n      fetchApi(\n        `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\n      )\n        .then(user => {\n          this.updateUser(user);\n          this.updateSessionId(session_id);\n        })\n        .then(() => {\n          fetchApi(\n            `${API_URL}/account/${this.state.user.id}/favorite/movies?api_key=${API_KEY_3}&session_id=${session_id}`\n          ).then(favoritesMovies => {\n            this.updateFavoritesMovies(favoritesMovies.results);\n            console.log('favoritesMovies');\n            console.log(favoritesMovies.results);\n          });\n        })\n        .then(() => {\n          fetchApi(\n            `${API_URL}/account/${this.state.user.id}/watchlist/movies?api_key=${API_KEY_3}&session_id=${session_id}`\n          ).then(watchlistMovies => {\n            this.updateWatchlistMovies(watchlistMovies.results);\n            console.log('watchlistMovies');\n            console.log(watchlistMovies.results);\n          });\n        });\n    }\n  }\n\n  render() {\n    const {\n      filters,\n      pagination,\n      page,\n      total_pages,\n      user,\n      session_id,\n      favoritesMovies,\n      watchlistMovies,\n    } = this.state;\n    return (\n      <AppContext.Provider\n        value={{\n          user,\n          favoritesMovies,\n          watchlistMovies,\n          session_id,\n          updateUser: this.updateUser,\n          updateSessionId: this.updateSessionId,\n          onLogOut: this.onLogOut,\n        }}\n      >\n        <div>\n          <Header\n            updateUser={this.updateUser}\n            updateSessionId={this.updateSessionId}\n            user={user}\n          />\n          <div className=\"container\">\n            <div className=\"row mt-4\">\n              <div className=\"col-4\">\n                <div className=\"card\" style={{ width: '100%' }}>\n                  <div className=\"card-body\">\n                    <h3>Фильтры:</h3>\n                    <Filters\n                      page={page}\n                      total_pages={total_pages}\n                      pagination={pagination}\n                      filters={filters}\n                      resetFilters={this.resetFilters}\n                      onChangePagination={this.onChangePagination}\n                      onChangeFilters={this.onChangeFilters}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-8\">\n                <MoviesList\n                  pagination={pagination}\n                  movies={this.state.movies}\n                  getMovies={this.getMovies}\n                  filters={this.state.filters}\n                  onChangePagination={this.onChangePagination}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stylesheets/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}