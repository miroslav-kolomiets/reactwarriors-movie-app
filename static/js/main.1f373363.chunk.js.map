{"version":3,"sources":["api/api.js","components/HOC/AppContextHOC.jsx","components/Header/UserDropdown.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Genres.jsx","components/Filters/GenresHOC.jsx","components/Filters/SortByYear.jsx","components/Pagination/Pagination.jsx","components/Filters/ResetFilters.jsx","components/Filters/Filters.jsx","components/Movies/Favorite.jsx","components/Movies/Watchlist.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MovieDetail.jsx","components/pages/MoviePage/MovieCredits.jsx","components/pages/MoviePage/MovieVideos.jsx","components/pages/MoviePage/MovieOverview.jsx","components/pages/MoviePage/MoviePage.jsx","components/Login/LoginForm.jsx","components/Login/LoginModal.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","Component","AppContext","Consumer","context","props","React","AppContextHOC","state","dropdownOpen","toggleDropdown","setState","prevState","handleLogOut","delete","session_id","onLogOut","user","this","Dropdown","isOpen","toggle","DropdownToggle","tag","onClick","data-toggle","aria-expanded","width","className","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","href","type","toggleModal","SortBy","sort_by","onChangeFilters","htmlFor","id","name","value","onChange","map","option","key","label","defaultProps","Genres","genres","onChangeGenresFilters","with_genres","genre","checked","includes","toString","GenresHOC","event","target","filter","getGenres","link","year","Date","getFullYear","years","Array","from","val","index","SortByYear","primary_release_year","Pagination","paginationBack","onChangePagination","page","paginationForward","total_pages","role","aria-label","disabled","ResetFilters","resetFilters","Filters","filters","pagination","toggleFavorite","isLoading","post","media_type","media_id","favorite","isFavorite","getFavoritesMovies","favoritesMovies","findIndex","movie","IconButton","style","StarBorder","Star","toggleWatchlist","watchlist","isInWatchlist","getWatchlistMovies","watchlistMovies","BookmarkBorder","Bookmark","MovieItem","item","backdrop_path","poster_path","to","title","vote_average","release_date","ButtonGroup","MoviesList","movies","length","Spinner","color","defaulProps","MoviesHOC","getMovies","language","get","results","prevProps","_","isEqual","MoviesPage","showModal","updateFavoritesMovies","updateWatchlistMovies","newFilters","MovieDetail","Table","responsive","scope","budget","homepage","original_language","revenue","tagline","vote_count","MovieCredits","console","log","cast","Container","Row","xs","sm","md","profile_path","MovieVideos","keys","Col","size","height","frameBorder","allowFullScreen","MovieOverview","Media","object","heading","overview","MoviePage","match","path","Nav","tabs","NavItem","TabContent","activeTab","render","isActive","username","password","errors","submitting","e","handleBlur","validateFields","onSubmit","request_token","updateSessionId","updateUser","base","status_message","onLogin","preventDefault","Object","placeholder","onBlur","Modal","ModalBody","cookies","Cookies","createContext","App","set","maxAge","remove","Provider","exact","component","MoviesPages","MoviePages","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1f373363.chunk.js","sourcesContent":["import queryString from 'query-string';\n\nexport const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '5265606bb69e99437c85eb04dc6f29b5';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MjY1NjA2YmI2OWU5OTQzN2M4NWViMDRkYzZmMjliNSIsInN1YiI6IjViMjdkM2IwMGUwYTI2NjcwOTAxY2JlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Io03eoINOt7D4nPuexS3qHeD371BOBaFsz8Oz2cJlNM';\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch(response => {\n        response.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const {params = {}} = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }\n    );\n  }\n\n  static post(url, options = {}) {\n    const {params = {}, body = {}} = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }\n    );\n  }\n\n  static delete(url, options = {}) {\n    const {params = {}, body = {}} = options;\n    const queryStringParams = {\n      api_key: API_KEY_3,\n      ...params\n    };\n\n    return fetchApi(\n      `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n      {\n        method: \"DELETE\",\n        mode: \"cors\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }\n    );\n  }\n}\n","import React from 'react';\nimport { AppContext } from '../App';\n\nexport default Component =>\n  class AppContextHOC extends React.Component {\n    render() {\n      return (\n        <AppContext.Consumer>\n          {context => <Component {...this.props} {...context} />}\n        </AppContext.Consumer>\n      );\n    }\n  };\n","import React from 'react';\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport CallApi from '../../api/api';\nimport AppContextHOC from '../HOC/AppContextHOC';\n\nclass UserMenu extends React.Component {\n  state = {\n    dropdownOpen: false,\n  };\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  };\n\n  handleLogOut = () => {\n    CallApi.delete(`/authentication/session`, {\n      params: {\n        session_id: this.props.session_id,\n      }\n    }).then(() => {\n      this.props.onLogOut();\n    });\n  };\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n        <DropdownToggle\n          tag=\"div\"\n          onClick={this.toggleDropdown}\n          data-toggle=\"dropdown\"\n          aria-expanded={this.state.dropdownOpen}\n        >\n          <img\n            width=\"40\"\n            className=\"rounded-circle\"\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n            alt=\"avatar\"\n            onClick={this.toggleDropdown}\n          />\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem onClick={this.handleLogOut}>Выйти</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default AppContextHOC(UserMenu);\n","import React from 'react';\nimport UserMenu from './UserDropdown';\nimport AppContextHOC from '../HOC/AppContextHOC';\n\nclass Header extends React.Component {\n  render() {\n    const { user } = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">\n                Home\n              </a>\n            </li>\n          </ul>\n          {user ? (\n            <UserMenu />\n          ) : (\n            <div>\n              <button\n                className=\"btn btn-success\"\n                type=\"button\"\n                onClick={this.props.toggleModal}\n              >\n                Login\n              </button>\n            </div>\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default AppContextHOC(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends React.Component {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярные по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярные по возростанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возростанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render() {\n    const { sort_by, onChangeFilters, options } = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilters}\n        >\n          {options.map(option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenresHOC from './GenresHOC';\n\nconst Genres = ({ genres, onChangeGenresFilters, with_genres }) => {\n  return (\n    <div>\n      {genres.map(genre => {\n        return (\n          <div className=\"form-check\" key={genre.id}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              onChange={onChangeGenresFilters}\n              name=\"with_genres\"\n              value={genre.id}\n              checked={with_genres.includes(genre.id.toString())}\n              id={genre.id}\n            />\n            <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n              {genre.name}\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nGenres.defaultProps = {\n  genres: [],\n};\n\nGenres.propTypes = {\n  genres: PropTypes.array.isRequired,\n};\n\nexport default GenresHOC(Genres);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { API_URL, API_KEY_3 } from '../../api/api';\n\nexport default Component =>\n  class GenresHOC extends React.Component {\n    static propTypes = {\n      with_genres: PropTypes.array.isRequired,\n      onChangeFilters: PropTypes.func.isRequired,\n    };\n\n    constructor() {\n      super();\n\n      this.state = {\n        genres: [],\n      };\n    }\n\n    onChangeGenresFilters = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      const with_genres = this.props.with_genres;\n\n      this.props.onChangeFilters({\n        target: {\n          name,\n          value: with_genres.includes(value)\n            ? with_genres.filter(genre => genre !== value)\n            : [...with_genres, value],\n        },\n      });\n    };\n\n    getGenres = () => {\n      const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\n\n      fetch(link)\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          this.setState({\n            genres: data.genres,\n          });\n        });\n    };\n\n    componentDidMount() {\n      this.getGenres();\n    }\n\n    render() {\n      return (\n        <Component\n          genres={this.state.genres}\n          onChangeGenresFilters={this.onChangeGenresFilters}\n          with_genres={this.props.with_genres}\n        />\n      );\n    }\n  };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst year = new Date().getFullYear();\nconst years = Array.from(new Array(20), (val, index) => year - index);\n\nexport default class SortByYear extends React.Component {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { primary_release_year, onChangeFilters } = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год выпуска:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilters}\n        >\n          {years.map(year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Pagination extends React.Component {\n  paginationBack = () => {\n    const { onChangePagination, page } = this.props;\n    return onChangePagination({ name: 'page', value: page - 1 });\n  };\n\n  paginationForward = () => {\n    const { onChangePagination, page } = this.props;\n    return onChangePagination({ name: 'page', value: page + 1 });\n  };\n\n  render() {\n    const { page, total_pages } = this.props;\n\n    return (\n      <div>\n        <div\n          className=\"btn-group btn-block\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            disabled={page === 1}\n            onClick={this.paginationBack}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={this.paginationForward}\n          >\n            Вперед\n          </button>\n        </div>\n        <p className=\"text-center p-3 text-center\">{`${page} из ${total_pages}`}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ResetFilters extends React.Component {\n  static propTypes = {\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div\n        className=\"btn-group btn-block\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-block\"\n          onClick={this.props.resetFilters}\n        >\n          Сбросить фильтры\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport Genres from './Genres';\nimport SortByYear from './SortByYear';\nimport Pagination from '../Pagination/Pagination';\nimport ResetFilters from './ResetFilters';\n\nexport default class Filters extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n    onChangePagination: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      filters: { sort_by, primary_release_year, with_genres },\n      pagination: { page, total_pages },\n      onChangePagination,\n      resetFilters,\n      onChangeFilters,\n    } = this.props;\n\n    return (\n      <form className=\"mb-3\">\n        <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters} />\n        <SortByYear\n          primary_release_year={primary_release_year}\n          onChangeFilters={onChangeFilters}\n        />\n        <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\n        <Pagination\n          onChangePagination={onChangePagination}\n          total_pages={total_pages}\n          page={page}\n        />\n        <ResetFilters resetFilters={resetFilters} />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport CallApi from '../../api/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Star, StarBorder} from '@material-ui/icons';\nimport AppContextHOC from '../HOC/AppContextHOC';\n\nclass Favorite extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: null,\n    };\n  }\n\n  toggleFavorite = (id, session_id) => {\n    if (session_id) {\n      this.setState({\n        isLoading: true,\n      });\n      CallApi.post(\n        `/account/${this.props.user.id}/favorite`, {\n          params: {\n            session_id: session_id\n          },\n          body: {\n            media_type: 'movie',\n            media_id: id,\n            favorite: !this.isFavorite(),\n          }\n        }\n      ).then(() => {\n        this.props.getFavoritesMovies(session_id);\n      }).then(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n    } else {\n      this.props.toggleModal();\n    }\n  };\n\n  isFavorite = () => {\n    return this.props.favoritesMovies ? this.props.favoritesMovies.findIndex(\n      movie => movie.id === this.props.id\n    ) !== -1 : false;\n  };\n\n  render() {\n    const {id, session_id} = this.props;\n    const {isLoading} = this.state;\n\n    if (this.isFavorite()) {\n      return (\n        <div>\n          <IconButton\n            style={isLoading ? { 'pointer-events': 'none' } : {'pointer-events': 'auto'}}\n            onClick={() => this.toggleFavorite(id, session_id)}\n          >\n            <StarBorder/>\n          </IconButton>\n        </div>\n      );\n    } else {\n      return (\n        <IconButton\n          style={isLoading ? { 'pointer-events': 'none' } : {'pointer-events': 'auto'}}\n          onClick={() => this.toggleFavorite(id, session_id)}\n        >\n          <Star/>\n        </IconButton>\n      );\n    }\n  }\n}\n\nexport default AppContextHOC(Favorite);\n","import React from 'react';\nimport CallApi from '../../api/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Bookmark, BookmarkBorder} from '@material-ui/icons';\nimport AppContextHOC from '../HOC/AppContextHOC';\n\nclass Watchlist extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: null,\n    };\n  }\n\n  toggleWatchlist = (id, session_id) => {\n    if (session_id) {\n      this.setState({\n        isLoading: true,\n      });\n      CallApi.post(\n        `/account/${this.props.user.id}/watchlist`, {\n          params: {\n            session_id: session_id\n          },\n          body: {\n            media_type: 'movie',\n            media_id: id,\n            watchlist: !this.isInWatchlist(),\n          }\n        }\n      ).then(() => {\n        this.props.getWatchlistMovies(session_id);\n      }).then(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n    } else {\n      this.props.toggleModal();\n    }\n  };\n\n  isInWatchlist = () => {\n    return this.props.watchlistMovies ? this.props.watchlistMovies.findIndex(\n      movie => movie.id === this.props.id\n    ) !== -1 : false;\n  };\n\n  render() {\n    const {id, session_id} = this.props;\n    const {isLoading} = this.state;\n\n    if (this.isInWatchlist()) {\n      return (\n        <div>\n          <IconButton\n            style={isLoading ? { 'pointer-events': 'none' } : {'pointer-events': 'auto'}}\n            onClick={() => this.toggleWatchlist(id, session_id)}\n          >\n            <BookmarkBorder/>\n          </IconButton>\n        </div>\n      );\n    } else {\n      return (\n        <IconButton\n          style={isLoading ? { 'pointer-events': 'none' } : {'pointer-events': 'auto'}}\n          onClick={() => this.toggleWatchlist(id, session_id)}\n        >\n          <Bookmark/>\n        </IconButton>\n      );\n    }\n  }\n}\n\nexport default AppContextHOC(Watchlist);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {ButtonGroup} from 'reactstrap';\nimport Favorite from './Favorite';\nimport Watchlist from './Watchlist';\n\nconst MovieItem = props => {\n  const {item} = props;\n  return (\n    <div className=\"card\">\n      <img\n        className=\"card-img-top card-img--height\"\n        src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || item.poster_path}`}\n        alt=\"\"\n      />\n      <div className=\"card-body\">\n        <Link className=\"card-title\" to={`/movie/${item.id}`}>{item.title}</Link>\n        <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n        <div className=\"card-text\">Релиз: {item.release_date}</div>\n      </div>\n      <ButtonGroup>\n        <Favorite id={item.id}/>\n        <Watchlist id={item.id}/>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport MovieItem from './MovieItem';\nimport { Spinner } from 'reactstrap';\nimport PropsTypes from 'prop-types';\nimport MoviesHOC from './MoviesHOC';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <div>\n      <div className=\"loader-wrapper\">\n        {movies.length === 0 && <Spinner color=\"primary\" />}\n      </div>\n      <div className=\"row\">\n        {movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nMoviesList.defaulProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropsTypes.array.isRequired,\n};\n\nexport default MoviesHOC(MoviesList);\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport CallApi from '../../api/api';\n\nexport default Component =>\n  class MoviesHOC extends React.Component {\n    constructor() {\n      super();\n\n      this.state = {\n        movies: [],\n      };\n    }\n\n    getMovies = (filters, pagination) => {\n      const { sort_by, primary_release_year, with_genres } = filters;\n      const { page } = pagination;\n      const queryStringParams = {\n        sort_by: sort_by,\n        page: page,\n        primary_release_year: primary_release_year,\n        with_genres: with_genres,\n        language: 'ru-RU',\n      };\n\n      CallApi.get('/discover/movie', {\n        params: queryStringParams,\n      }).then(data => {\n        this.setState({\n          movies: data.results,\n        });\n        this.props.onChangePagination({\n          name: 'total_pages',\n          value: data.total_pages,\n        });\n      });\n    };\n\n    componentDidMount() {\n      this.getMovies(this.props.filters, this.props.pagination);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!_.isEqual(this.props.filters, prevProps.filters)) {\n        this.getMovies(this.props.filters, 1);\n        this.props.onChangePagination(1);\n      }\n\n      if (this.props.pagination.page !== prevProps.pagination.page) {\n        this.getMovies(this.props.filters, this.props.pagination);\n      }\n    }\n\n    render() {\n      const { movies } = this.state;\n      return <Component {...this.props} movies={movies} />;\n    }\n  };\n","import React from 'react';\nimport Filters from '../../Filters/Filters';\nimport MoviesList from '../../Movies/MoviesList';\nimport CallApi from '../../../api/api';\n\nexport default class MoviesPage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      favoritesMovies: null,\n      watchlistMovies: null,\n      showModal: false,\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    };\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  updateFavoritesMovies = favoritesMovies => {\n    this.setState({favoritesMovies});\n  };\n\n  updateWatchlistMovies = watchlistMovies => {\n    this.setState({watchlistMovies});\n  };\n\n  onChangeFilters = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const newFilters = {\n      ...this.state.filters,\n      [name]: value,\n    };\n    this.setState({\n      filters: newFilters,\n    });\n  };\n\n  resetFilters = () => {\n    this.setState(prevProps => ({\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    }));\n  };\n\n  onChangePagination = ({name, value}) => {\n    this.setState(prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        [name]: value,\n      },\n    }));\n  };\n\n  getFavoritesMovies = session_id => {\n    CallApi.get(`/account/${this.state.user.id}/favorite/movies`, {\n      params: {\n        session_id: session_id\n      }\n    }).then(favoritesMovies => {\n      this.updateFavoritesMovies(favoritesMovies.results);\n    })\n  };\n\n  getWatchlistMovies = session_id => {\n    CallApi.get(`/account/${this.state.user.id}/watchlist/movies`, {\n      params: {\n        session_id: session_id\n      }\n    }).then(watchlistMovies => {\n      this.updateWatchlistMovies(watchlistMovies.results);\n    })\n  };\n\n  render() {\n    const {\n      filters,\n      pagination,\n      page,\n      total_pages,\n    } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h3>Фильтры:</h3>\n                <Filters\n                  page={page}\n                  total_pages={total_pages}\n                  pagination={pagination}\n                  filters={filters}\n                  resetFilters={this.resetFilters}\n                  onChangePagination={this.onChangePagination}\n                  onChangeFilters={this.onChangeFilters}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-8\">\n            <MoviesList\n              pagination={pagination}\n              movies={this.state.movies}\n              getMovies={this.getMovies}\n              filters={this.state.filters}\n              onChangePagination={this.onChangePagination}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Table } from 'reactstrap';import React from \"react\";\n\nconst MovieDetail = (props) => {\n  const { movie } = props;\n  return (\n    <Table responsive>\n      <tbody>\n      {movie &&\n      <>\n        <tr>\n          <th scope=\"row\">1</th>\n          <td>Budget</td>\n          <td>{`${movie.budget}$`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">2</th>\n          <td>Homepage</td>\n          <td><a href={`${movie.homepage}`}>Link</a></td>\n        </tr>\n        <tr>\n          <th scope=\"row\">3</th>\n          <td>budget</td>\n          <td>{`${movie.budget}$`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">4</th>\n          <td>Original language</td>\n          <td>{`${movie.original_language}`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">5</th>\n          <td>Release date</td>\n          <td>{`${movie.release_date}`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">6</th>\n          <td>Revenue</td>\n          <td>{`${movie.revenue}$`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">7</th>\n          <td>Tagline</td>\n          <td>{`${movie.tagline}`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">8</th>\n          <td>Vote average</td>\n          <td>{`${movie.vote_average}`}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">9</th>\n          <td>Vote count</td>\n          <td>{`${movie.vote_count}`}</td>\n        </tr>\n      </>\n      }\n      </tbody>\n    </Table>\n  )\n};\n\nexport default MovieDetail;\n","import { Media, Container, Row } from 'reactstrap';import React from \"react\";\nimport CallApi from \"../../../api/api\";\n\nclass MovieCredits extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    }\n  }\n\n  componentDidMount() {\n    CallApi.get(`/movie/${this.props.id}/credits`).then(data => {\n      console.log(data)\n      this.setState({data: data.cast});\n    })\n  }\n\n  render() {\n    const data = this.state.data;\n    return (\n      <Container className=\"themed-container\">\n        <Row xs=\"1\" sm=\"2\" md=\"4\">\n        {\n          data && data.map((item) => {\n            return (\n              item.profile_path &&\n                <img\n                  className='actor-avatar'\n                  src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                  alt=\"\"\n                />\n            )\n          })\n        }\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default MovieCredits;\n","import {Col, Row, TabPane} from \"reactstrap\";\nimport React from \"react\";\nimport CallApi from \"../../../api/api\";\n\nclass MovieVideos extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      keys: [],\n    }\n  }\n\n  componentDidMount() {\n    CallApi.get(`/movie/${this.props.id}/videos`).then(data => {\n      const keys = data.results.map((item) => item.key);\n      this.setState({keys});\n    })\n  }\n\n  render() {\n    return (\n      <Row>\n          {\n            this.state.keys && this.state.keys.map((key) => {\n              console.log('test');\n              return (\n                <Col sm={{ size: 'auto' }}>\n                  <iframe\n                    id=\"ytplayer\"\n                    type=\"text/html\"\n                    width=\"320\"\n                    height=\"180\"\n                    src={`https://www.youtube.com/embed/${key}`}\n                    frameBorder=\"0\" allowFullScreen\n                  />\n                </Col>\n              )\n            })\n          }\n      </Row>\n    )\n  }\n}\n\nexport default MovieVideos;\n","import {Media} from \"reactstrap\";\nimport React from \"react\";\n\nconst MovieOverview = (props) => {\n  const { movie } = props;\n  return (\n    <Media className='media-film-card'>\n      {\n        movie &&\n          <>\n            <Media\n              object\n              className='media-film-card__img'\n              src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path || movie.poster_path}`}\n              alt=\"\"\n            />\n            <Media body className='media-film-card__body'>\n            <Media heading className='media-film-card__heading'>\n              {movie.title}\n            </Media>\n              {movie.overview}\n            </Media>\n          </>\n      }\n    </Media>\n  )\n}\n\nexport default MovieOverview;\n","import React from 'react';\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport {Nav, NavItem, TabContent,} from 'reactstrap';\nimport CallApi from '../../../api/api';\nimport MovieDetail from \"./MovieDetail\";\nimport MovieCredits from \"./MovieCredits\";\nimport MovieVideos from \"./MovieVideos\";\nimport MovieOverview from './MovieOverview';\n\nexport default class MoviePage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {}\n  }\n\n  componentDidMount() {\n    CallApi.get(`/movie/${this.props.match.params.id}`).then(data => {\n      this.setState({data});\n    })\n  }\n\n  render() {\n    const path = this.props.match.url;\n    return (\n      <div className='movie-page'>\n        <MovieOverview movie={this.state.data}/>\n        <Nav tabs>\n          <NavItem>\n            <NavLink to={`${path}/details`} className=\"link\">\n              details\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to={`${path}/videos`} className=\"link\">\n              videos\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to={`${path}/credits`} className=\"link\">\n              credits\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={1}>\n          <Switch>\n            <Route\n              path={`${path}/details`}\n              render={(props) => <MovieDetail movie={this.state.data} {...props} isActive={true} />}\n            />\n            <Route\n              path={`${path}/videos/`}\n              render={(props) => <MovieVideos id={this.props.match.params.id} {...props} isActive={true} />}\n            />\n            <Route\n              path={`${path}/credits`}\n              render={(props) => <MovieCredits id={this.props.match.params.id} {...props} isActive={true} />}\n            />\n          </Switch>\n        </TabContent>\n      </div>\n    )\n  }\n};\n","import React from 'react';\nimport CallApi from '../../api/api';\nimport AppContextHOC from '../HOC/AppContextHOC';\n\nclass LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {},\n    submitting: false,\n  };\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleBlur = e => {\n    const errors = this.validateFields();\n    const name = e.target.name;\n    if (errors[name]) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: errors[name],\n        },\n      }));\n    }\n  };\n\n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Not empty';\n    }\n\n    if (this.state.password === '') {\n      errors.password = 'Not empty';\n    }\n\n    return errors;\n  };\n\n  onSubmit = () => {\n    this.setState({\n      submitting: true,\n    });\n\n    CallApi.get(`/authentication/token/new`)\n      .then(data => {\n        return CallApi.post(\n          `/authentication/token/validate_with_login`, {\n            params: {\n              username: this.state.username,\n              password: this.state.password,\n              request_token: data.request_token,\n            }\n          }\n        );\n      })\n      .then(data => {\n        return CallApi.post(\n          `/authentication/session/new`, {\n            params: {\n              request_token: data.request_token,\n            }\n          }\n        );\n      })\n      .then(data => {\n        this.props.updateSessionId(data.session_id);\n        return CallApi.get(\n          `/account`, {\n            params: {\n              session_id: data.session_id,\n            }\n          }\n        );\n      })\n      .then(user => {\n        this.setState(\n          {\n            submitting: false,\n          },\n          () => {\n            this.props.updateUser(user);\n          }\n        );\n      })\n      .catch(error => {\n        console.log('error', error);\n        this.setState({\n          submitting: false,\n          errors: {\n            base: error.status_message,\n          },\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault();\n    const errors = this.validateFields();\n    if (Object.keys(errors).length > 0) {\n      this.setState(prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    } else {\n      this.onSubmit();\n    }\n  };\n\n  render() {\n    const { username, password, errors, submitting } = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Пользователь</label>\n            <input\n              type=\"text\"\n              className={\n                errors.username ? 'form-control is-invalid' : 'form-control'\n              }\n              id=\"username\"\n              placeholder=\"Пользователь\"\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.username && (\n              <div className=\"invalid-feedback\">{errors.username}</div>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Пароль</label>\n            <input\n              type=\"password\"\n              className={\n                errors.password ? 'form-control is-invalid' : 'form-control'\n              }\n              id=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.password && (\n              <div className=\"invalid-feedback\">{errors.password}</div>\n            )}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base && (\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AppContextHOC(LoginForm);\n","import React from 'react';\nimport {Modal, ModalBody} from 'reactstrap';\nimport LoginForm from './LoginForm';\nimport AppContextHOC from '../HOC/AppContextHOC';\n\nclass LoginModal extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.props.showModal} toggle={this.props.toggleModal}>\n          <ModalBody>\n            <LoginForm\n              updateUser={this.props.updateUser}\n              updateSessionId={this.props.updateSessionId}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AppContextHOC(LoginModal);\n","import React from 'react';\nimport Header from './Header/Header';\nimport MoviesPages from './pages/MoviesPage/MoviesPage';\nimport MoviePages from './pages/MoviePage/MoviePage';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport CallApi from '../api/api';\nimport LoginModal from './Login/LoginModal';\n\nconst cookies = new Cookies();\n\nexport const AppContext = React.createContext();\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: null,\n      favoritesMovies: null,\n      watchlistMovies: null,\n      session_id: null,\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  updateUser = user => {\n    this.setState({user});\n  };\n\n  updateSessionId = session_id => {\n    cookies.set('session_id', session_id, {path: '/', maxAge: 2592000});\n    this.setState({session_id});\n  };\n\n  updateFavoritesMovies = favoritesMovies => {\n    this.setState({favoritesMovies});\n  };\n\n  updateWatchlistMovies = watchlistMovies => {\n    this.setState({watchlistMovies});\n  };\n\n  onLogOut = () => {\n    cookies.remove('session_id');\n    this.setState({\n      session_id: null,\n      user: null,\n    });\n  };\n\n  getFavoritesMovies = session_id => {\n    CallApi.get(`/account/${this.state.user.id}/favorite/movies`, {\n      params: {\n        session_id: session_id\n      }\n    }).then(favoritesMovies => {\n      this.updateFavoritesMovies(favoritesMovies.results);\n    })\n  };\n\n  getWatchlistMovies = session_id => {\n    CallApi.get(`/account/${this.state.user.id}/watchlist/movies`, {\n      params: {\n        session_id: session_id\n      }\n    }).then(watchlistMovies => {\n      this.updateWatchlistMovies(watchlistMovies.results);\n    })\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get('session_id');\n    if (session_id) {\n      CallApi.get(\n        `/account`, {\n          params: {\n            session_id: session_id,\n          }\n        }\n      )\n        .then(user => {\n          this.updateUser(user);\n          this.updateSessionId(session_id);\n        })\n        .then(() => {\n          this.getFavoritesMovies(session_id);\n        })\n        .then(() => {\n          this.getWatchlistMovies(session_id);\n        });\n    }\n  }\n\n  render() {\n    const {\n      user,\n      session_id,\n      showModal,\n      favoritesMovies,\n      watchlistMovies,\n    } = this.state;\n    return (\n      <Router>\n        <AppContext.Provider\n          value={{\n            user,\n            favoritesMovies,\n            watchlistMovies,\n            session_id,\n            showModal,\n            toggleModal: this.toggleModal,\n            updateUser: this.updateUser,\n            updateSessionId: this.updateSessionId,\n            onLogOut: this.onLogOut,\n            getFavoritesMovies: this.getFavoritesMovies,\n            getWatchlistMovies: this.getWatchlistMovies,\n          }}\n        >\n          <div>\n            {this.state.showModal && (\n              <LoginModal isOpen={this.state.showModal} toggle={this.toggleModal}/>)}\n            <Header />\n            <Route path=\"/\" exact component={MoviesPages} />\n            <Route path=\"/movie/:id\" component={MoviePages} />\n          </div>\n        </AppContext.Provider>\n      </Router>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stylesheets/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}