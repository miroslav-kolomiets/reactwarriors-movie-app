{"version":3,"sources":["components/Header/User.jsx","api/api.js","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Genres.jsx","components/Filters/SortByYear.jsx","components/Pagination/Pagination.jsx","components/Filters/ResetFilters.jsx","components/Filters/Filters.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/App.jsx","index.js"],"names":["User","user","this","props","react_default","a","createElement","width","className","src","concat","avatar","gravatar","hash","alt","React","Component","API_URL","API_KEY_3","fetchApi","url","options","arguments","length","undefined","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","LoginForm","state","username","password","repeatPassword","errors","submitting","onChange","e","name","target","value","_this","setState","prevState","_ref","Object","defineProperty","objectSpread","base","handleBlur","console","log","validateFields","keys","onSubmit","method","mode","headers","Content-type","body","JSON","stringify","request_token","updateSessionId","session_id","updateUser","status_message","onLogin","preventDefault","_this$state","htmlFor","type","id","placeholder","onBlur","onClick","disabled","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleModal","showModal","Modal","isOpen","toggle","ModalBody","LoginForm_LoginForm","Header","_this$props","Header_User","Login_Login","SortBy","sort_by","onChangeFilters","map","option","key","label","defaultProps","Genres","onChangeGenresFilters","event","with_genres","includes","filter","genre","toConsumableArray","getGenres","link","genres","_this2","year","Date","getFullYear","years","Array","from","val","index","SortByYear","primary_release_year","Pagination","page","total_pages","onChangePagination","role","aria-label","ResetFilters","resetFilters","Filters","_this$props$filters","filters","_this$props$paginatio","pagination","SortBy_SortBy","SortByYear_SortByYear","Genres_Genres","Pagination_Pagination","ResetFilters_ResetFilters","MovieItem","item","style","backdrop_path","poster_path","title","vote_average","release_date","MovieList","getMovies","movies","results","prevProps","_","isEqual","movie","MovieItem_MovieItem","cookies","Cookies","App","set","path","maxAge","newFilters","get","components_Header_Header","Filters_Filters","MoviesList_MovieList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.51505c6c.chunk.js","sourcesContent":["import React from 'react';\n\nclass User extends React.Component {\n  render() {\n    const {user} = this.props;\n    return (\n      <div>\n        <img\n          width=\"40\"\n          className=\"rounded-circle\"\n          src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n          alt=\"avatar\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default User;\n","export const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '5265606bb69e99437c85eb04dc6f29b5';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MjY1NjA2YmI2OWU5OTQzN2M4NWViMDRkYzZmMjliNSIsInN1YiI6IjViMjdkM2IwMGUwYTI2NjcwOTAxY2JlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Io03eoINOt7D4nPuexS3qHeD371BOBaFsz8Oz2cJlNM';\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise ((resolve, reject) => {\n    fetch (url, options)\n      .then (response => {\n        if (response.status < 400) {\n          return response.json ();\n        } else {\n          throw response;\n        }\n      })\n      .then (data => {\n        resolve (data);\n      })\n      .catch (response => {\n        response.json ().then (error => {\n          reject (error);\n        });\n      });\n  });\n};\n","import React from 'react';\nimport {API_URL, API_KEY_3, fetchApi} from '../../../api/api';\nexport default class LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    repeatPassword: '',\n    errors: {},\n    submitting: false,\n  };\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState (prevState => ({\n      [name]: value,\n      errors: {\n        ...prevState.errors,\n        base: null,\n        [name]: null,\n      },\n    }));\n  };\n\n  handleBlur = () => {\n    console.log ('on blur');\n    const errors = this.validateFields ();\n    if (Object.keys (errors).length > 0) {\n      this.setState (prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    }\n  };\n\n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Not empty';\n    }\n\n    if (this.state.password === '') {\n      errors.password = 'Not empty';\n    }\n\n    if (this.state.repeatPassword === '') {\n      errors.repeatPassword = 'Not empty';\n    }\n\n    if (this.state.repeatPassword !== this.state.password) {\n      errors.repeatPassword = 'Mast be equal for password';\n    }\n\n    return errors;\n  };\n\n  onSubmit = () => {\n    this.setState ({\n      submitting: true,\n    });\n    fetchApi (`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n      .then (data => {\n        return fetchApi (\n          `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n          {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify ({\n              username: this.state.username,\n              password: this.state.password,\n              request_token: data.request_token,\n            }),\n          }\n        );\n      })\n      .then (data => {\n        return fetchApi (\n          `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n          {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-type': 'application/json',\n            },\n            body: JSON.stringify ({\n              request_token: data.request_token,\n            }),\n          }\n        );\n      })\n      .then (data => {\n        this.props.updateSessionId (data.session_id);\n        return fetchApi (\n          `${API_URL}/account?api_key=${API_KEY_3}&session_id=${data.session_id}`\n        );\n      })\n      .then (user => {\n        console.log ('session', user);\n        this.props.updateUser (user);\n        this.setState ({\n          submitting: false,\n        });\n      })\n      .catch (error => {\n        console.log ('error', error);\n        this.setState ({\n          submitting: false,\n          errors: {\n            base: error.status_message,\n          },\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault ();\n    const errors = this.validateFields ();\n    if (Object.keys (errors).length > 0) {\n      this.setState (prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    } else {\n      this.onSubmit ();\n    }\n  };\n\n  render() {\n    const {username, password, repeatPassword, errors, submitting} = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Пользователь</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              placeholder=\"Пользователь\"\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.username &&\n              <div className=\"invalid-feedback\">{errors.username}</div>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Пароль</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.password &&\n              <div className=\"invalid-feedback\">{errors.password}</div>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"repeatPassword\">Повторите пароль</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"repeatPassword\"\n              placeholder=\"Повторите пароль\"\n              name=\"repeatPassword\"\n              value={repeatPassword}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.repeatPassword &&\n              <div className=\"invalid-feedback\">{errors.repeatPassword}</div>}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base &&\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport {Modal, ModalBody} from 'reactstrap';\nimport LoginForm from './LoginForm';\n\nexport default class Login extends React.Component {\n  constructor() {\n    super ();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState (prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"btn btn-success\"\n          type=\"button\"\n          onClick={this.toggleModal}\n        >\n          Login\n        </button>\n        <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n          <ModalBody>\n            <LoginForm\n              updateUser={this.props.updateUser}\n              updateSessionId={this.props.updateSessionId}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport User from './User';\nimport Login from './Login/Login';\n\nclass Header extends React.Component {\n  render() {\n    const {user, updateUser} = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\">Home</a>\n            </li>\n          </ul>\n          {user\n            ? <User user={user} />\n            : <Login\n                updateUser={updateUser}\n                updateSessionId={this.props.updateSessionId}\n              />}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends React.Component {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярные по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярные по возростанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возростанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render() {\n    const {sort_by, onChangeFilters, options} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilters}\n        >\n          {options.map (option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {API_URL, API_KEY_3} from '../../api/api';\n\nexport default class Genres extends React.Component {\n  static propTypes = {\n    with_genres: PropTypes.array.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super ();\n\n    this.state = {\n      genres: [],\n    };\n  }\n\n  onChangeGenresFilters = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const with_genres = this.props.with_genres;\n\n    this.props.onChangeFilters ({\n      target: {\n        name,\n        value: with_genres.includes (value)\n          ? with_genres.filter (genre => genre !== value)\n          : [...with_genres, value],\n      },\n    });\n  };\n\n  getGenres = () => {\n    const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\n\n    fetch (link)\n      .then (response => {\n        return response.json ();\n      })\n      .then (data => {\n        this.setState ({\n          genres: data.genres,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getGenres ();\n  }\n\n  render() {\n    const {genres} = this.state;\n    return (\n      <div>\n        {genres.map (genre => {\n          return (\n            <div className=\"form-check\" key={genre.id}>\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                onChange={this.onChangeGenresFilters}\n                name=\"with_genres\"\n                value={genre.id}\n                id={genre.id}\n              />\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                {genre.name}\n              </label>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst year = new Date ().getFullYear ();\nconst years = Array.from (new Array (20), (val, index) => year - index);\n\nexport default class SortByYear extends React.Component {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {primary_release_year, onChangeFilters} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год выпуска:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilters}\n        >\n          {years.map (year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Pagination extends React.Component {\n  render() {\n    const {page, total_pages, onChangePagination} = this.props;\n\n    return (\n      <div>\n        <div\n          className=\"btn-group btn-block\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            disabled={page === 1}\n            onClick={() =>\n              onChangePagination ({\n                name: 'page',\n                value: page - 1,\n              })}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={() =>\n              onChangePagination ({\n                name: 'page',\n                value: page + 1,\n              })}\n          >\n            Вперед\n          </button>\n        </div>\n        <p className=\"text-center p-3 text-center\">{`${page} из ${total_pages}`}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ResetFilters extends React.Component {\n  static propTypes = {\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div\n        className=\"btn-group btn-block\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-block\"\n          onClick={this.props.resetFilters}\n        >\n          Сбросить фильтры\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport Genres from './Genres';\nimport SortByYear from './SortByYear';\nimport Pagination from '../Pagination/Pagination';\nimport ResetFilters from './ResetFilters';\n\nexport default class Filters extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n    onChangePagination: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      filters: {sort_by, primary_release_year, with_genres},\n      pagination: {page, total_pages},\n      onChangePagination,\n      resetFilters,\n      onChangeFilters,\n    } = this.props;\n\n    return (\n      <form className=\"mb-3\">\n        <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters} />\n        <SortByYear\n          primary_release_year={primary_release_year}\n          onChangeFilters={onChangeFilters}\n        />\n        <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\n        <Pagination\n          onChangePagination={onChangePagination}\n          total_pages={total_pages}\n          page={page}\n        />\n        <ResetFilters resetFilters={resetFilters} />\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MovieItem extends React.Component {\n  render() {\n    const {item} = this.props;\n    return (\n      <div className=\"card\" style={{width: '100%'}}>\n        <img\n          className=\"card-img-top card-img--height\"\n          src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || item.poster_path}`}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{item.title}</h6>\n          <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n          <div className=\"card-text\">Релиз: {item.release_date}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport _ from 'lodash';\nimport MovieItem from './MovieItem';\nimport {API_URL, API_KEY_3} from '../../api/api';\n\nexport default class MovieList extends Component {\n  constructor() {\n    super ();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  getMovies = (filters, pagination) => {\n    const {sort_by, primary_release_year, with_genres} = filters;\n    const {page} = pagination;\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}&primary_release_year=${primary_release_year}&with_genres=${with_genres}`;\n\n    fetch (link)\n      .then (response => {\n        return response.json ();\n      })\n      .then (data => {\n        this.setState ({\n          movies: data.results,\n        });\n        this.props.onChangePagination ({\n          name: 'total_pages',\n          value: data.total_pages,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getMovies (this.props.filters, this.props.pagination);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual (this.props.filters, prevProps.filters)) {\n      this.getMovies (this.props.filters, 1);\n      this.props.onChangePagination (1);\n    }\n\n    if (this.props.pagination.page !== prevProps.pagination.page) {\n      this.getMovies (this.props.filters, this.props.pagination);\n    }\n  }\n\n  render() {\n    const {movies} = this.state;\n    return (\n      <div className=\"row\">\n        {movies.map (movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Header from './Header/Header';\nimport Filters from './Filters/Filters';\nimport MoviesList from './Movies/MoviesList';\nimport Cookies from 'universal-cookie';\nimport {API_URL, API_KEY_3, fetchApi} from '../api/api';\n\nconst cookies = new Cookies ();\n\nexport default class App extends React.Component {\n  constructor() {\n    super ();\n\n    this.state = {\n      user: null,\n      session_id: null,\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    };\n  }\n\n  updateUser = user => {\n    this.setState ({user});\n  };\n\n  updateSessionId = session_id => {\n    cookies.set ('session_id', session_id, {path: '/', maxAge: 2592000});\n    this.setState ({session_id});\n  };\n\n  onChangeFilters = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const newFilters = {\n      ...this.state.filters,\n      [name]: value,\n    };\n    this.setState ({\n      filters: newFilters,\n    });\n  };\n\n  resetFilters = () => {\n    this.setState (prevProps => ({\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    }));\n  };\n\n  onChangePagination = ({name, value}) => {\n    this.setState (prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        [name]: value,\n      },\n    }));\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get ('session_id');\n    if (session_id) {\n      fetchApi (\n        `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\n      ).then (user => {\n        this.updateUser (user);\n      });\n    }\n  }\n\n  render() {\n    const {filters, pagination, page, total_pages, user} = this.state;\n    return (\n      <div>\n        <Header\n          updateUser={this.updateUser}\n          updateSessionId={this.updateSessionId}\n          user={user}\n        />\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n            <div className=\"col-4\">\n              <div className=\"card\" style={{width: '100%'}}>\n                <div className=\"card-body\">\n                  <h3>Фильтры:</h3>\n                  <Filters\n                    page={page}\n                    total_pages={total_pages}\n                    pagination={pagination}\n                    filters={filters}\n                    resetFilters={this.resetFilters}\n                    onChangePagination={this.onChangePagination}\n                    onChangeFilters={this.onChangeFilters}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-8\">\n              <MoviesList\n                pagination={pagination}\n                movies={this.state.movies}\n                getMovies={this.getMovies}\n                filters={this.state.filters}\n                onChangePagination={this.onChangePagination}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}