{"version":3,"sources":["api/api.js","components/Header/UserDropdown.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Genres.jsx","components/Filters/GenresHOC.jsx","components/Filters/SortByYear.jsx","components/Pagination/Pagination.jsx","components/Filters/ResetFilters.jsx","components/Filters/Filters.jsx","components/Movies/Favorite.jsx","components/Movies/Watchlist.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","params","queryStringParams","queryString","stringify","mode","headers","body","method","JSON","UserMenu","state","dropdownOpen","toggleDropdown","setState","prevState","handleLogOut","session_id","props","onLogOut","user","this","Dropdown","isOpen","toggle","DropdownToggle","tag","onClick","data-toggle","aria-expanded","width","className","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","React","Component","UserMenuContainer","AppContext","Consumer","context","displayName","LoginForm","username","password","errors","submitting","onChange","e","name","target","value","handleBlur","validateFields","onSubmit","request_token","updateSessionId","updateUser","console","log","base","status_message","onLogin","preventDefault","Object","keys","length","htmlFor","type","id","placeholder","onBlur","disabled","Login","toggleModal","showModal","Modal","ModalBody","Header","href","SortBy","sort_by","onChangeFilters","map","option","key","label","defaultProps","Genres","genres","onChangeGenresFilters","with_genres","genre","checked","includes","toString","GenresHOC","event","filter","getGenres","link","year","Date","getFullYear","years","Array","from","val","index","SortByYear","primary_release_year","Pagination","paginationBack","onChangePagination","page","paginationForward","total_pages","role","aria-label","ResetFilters","resetFilters","Filters","filters","pagination","Favorite","addToFav","item","media_type","media_id","favorite","isFavorite","removeFromFav","prevProps","snapshot","favoritesMovies","movie","IconButton","StarBorder","Star","FavoriteContainer","Watchlist","watchlist","isInWatchlist","watchlistMovies","BookmarkBorder","Bookmark","WatchlistContainer","MovieItem","style","backdrop_path","poster_path","title","vote_average","release_date","ButtonGroup","MoviesList","movies","Spinner","color","defaulProps","MoviesHOC","getMovies","get","results","_","isEqual","cookies","Cookies","createContext","App","set","path","maxAge","updateFavoritesMovies","updateWatchlistMovies","remove","newFilters","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91afb357.chunk.js","sourcesContent":["import queryString from \"query-string\";\n\nexport const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '5265606bb69e99437c85eb04dc6f29b5';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MjY1NjA2YmI2OWU5OTQzN2M4NWViMDRkYzZmMjliNSIsInN1YiI6IjViMjdkM2IwMGUwYTI2NjcwOTAxY2JlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Io03eoINOt7D4nPuexS3qHeD371BOBaFsz8Oz2cJlNM';\n\nexport const fetchApi = (url, options = {}) => {\n  return new Promise ((resolve, reject) => {\n    fetch (url, options)\n      .then (response => {\n        if (response.status < 400) {\n          return response.json ();\n        } else {\n          throw response;\n        }\n      })\n      .then (data => {\n        // console.log(data);\n        resolve (data);\n      })\n      .catch (response => {\n        response.json ().then (error => {\n          reject (error);\n        });\n      });\n  });\n};\n\nexport default class CallApi {\n  static get(url, options = {}) {\n    const { params = {} } = options;\n    const queryStringParams = {\n      \"api_key\": API_KEY_3,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n  }\n\n  static post(url, options = {}) {\n    const { params = {}, body = {} } = options;\n    const queryStringParams = {\n      \"api_key\": API_KEY_3,\n      ...params,\n    };\n\n    return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify (body),\n    })\n  }\n}\n","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport {AppContext} from \"../App\";\nimport {API_URL, API_KEY_3, fetchApi} from '../../api/api';\n\nclass UserMenu extends React.Component {\n  state = {\n    dropdownOpen: false\n  };\n\n  toggleDropdown = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  handleLogOut = () => {\n    fetchApi(`${API_URL}/authentication/session?api_key=${API_KEY_3}`, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        session_id: this.props.session_id\n      })\n    }).then(() => {\n      this.props.onLogOut();\n    })\n  };\n\n  render() {\n    const {user} = this.props;\n\n    return (\n      <Dropdown\n        isOpen={this.state.dropdownOpen}\n        toggle={this.toggleDropdown}\n      >\n        <DropdownToggle\n          tag=\"div\"\n          onClick={this.toggleDropdown}\n          data-toggle=\"dropdown\"\n          aria-expanded={this.state.dropdownOpen}\n        >\n          <img\n            width=\"40\"\n            className=\"rounded-circle\"\n            src={`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=64\"`}\n            alt=\"avatar\"\n            onClick={this.toggleDropdown}\n          >\n          </img>\n        </DropdownToggle>\n        <DropdownMenu\n          right\n        >\n          <DropdownItem\n            onClick={this.handleLogOut}\n          >\n            Выйти\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nconst UserMenuContainer = (props) => {\n  return (\n    <AppContext.Consumer>\n      {(context) => {\n        return (\n          <UserMenu\n            {...context}\n            {...props}\n          />\n        )\n      }}\n    </AppContext.Consumer>\n  )\n};\n\nUserMenuContainer.displayName = \"UserMenuContainer\";\n\nexport default UserMenuContainer;\n","import React from 'react';\nimport { API_URL, API_KEY_3, fetchApi } from \"../../../api/api\";\nimport { AppContext } from '../../App';\n\nclass LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    errors: {},\n    submitting: false,\n  };\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState ({\n      [name]: value,\n    });\n  };\n\n  handleBlur = e => {\n    const errors = this.validateFields ();\n    const name = e.target.name;\n    if (errors[name]) {\n      this.setState (state => ({\n        errors: {\n          ...state.errors,\n          [name]: errors[name]\n        },\n      }));\n    }\n  };\n\n  validateFields = () => {\n    const errors = {};\n\n    if (this.state.username === '') {\n      errors.username = 'Not empty';\n    }\n\n    if (this.state.password === '') {\n      errors.password = 'Not empty';\n    }\n\n    return errors;\n  };\n\n  onSubmit = () => {\n    this.setState({\n      submitting: true\n    });\n    fetchApi(`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`)\n      .then(data => {\n        return fetchApi(\n          `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`,\n          {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              username: this.state.username,\n              password: this.state.password,\n              request_token: data.request_token\n            })\n          }\n        );\n      })\n      .then(data => {\n        return fetchApi(\n          `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`,\n          {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              request_token: data.request_token\n            })\n          }\n        );\n      })\n      .then(data => {\n        this.props.updateSessionId(data.session_id);\n        return fetchApi(\n          `${API_URL}/account?api_key=${API_KEY_3}&session_id=${\n            data.session_id\n          }`\n        );\n      })\n      .then(user => {\n        this.setState(\n          {\n            submitting: false\n          },\n          () => {\n            this.props.updateUser(user);\n          }\n        );\n      })\n      .catch(error => {\n        console.log(\"error\", error);\n        this.setState({\n          submitting: false,\n          errors: {\n            base: error.status_message\n          }\n        });\n      });\n  };\n\n  onLogin = e => {\n    e.preventDefault ();\n    const errors = this.validateFields ();\n    if (Object.keys (errors).length > 0) {\n      this.setState (prevState => ({\n        errors: {\n          ...prevState.errors,\n          ...errors,\n        },\n      }));\n    } else {\n      this.onSubmit ();\n    }\n  };\n\n  render() {\n    const { username, password, errors, submitting } = this.state;\n    return (\n      <div className=\"form-login-container\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\n            Авторизация\n          </h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Пользователь</label>\n            <input\n              type=\"text\"\n              className={\n                errors.username ? \"form-control is-invalid\" : \"form-control\"\n              }\n              id=\"username\"\n              placeholder=\"Пользователь\"\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.username &&\n            <div className=\"invalid-feedback\">{errors.username}</div>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Пароль</label>\n            <input\n              type=\"password\"\n              className={\n                errors.password ? \"form-control is-invalid\" : \"form-control\"\n              }\n              id=\"password\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              onBlur={this.handleBlur}\n            />\n            {errors.password &&\n            <div className=\"invalid-feedback\">{errors.password}</div>}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.onLogin}\n            disabled={submitting}\n          >\n            Вход\n          </button>\n          {errors.base &&\n          <div className=\"invalid-feedback text-center\">{errors.base}</div>}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default (props) => {\n  return (\n    <AppContext.Consumer>\n      {(context) => <LoginForm updateUser={context.updateUser} {...props}/>}\n    </AppContext.Consumer>\n  )\n}\n","import React from 'react';\nimport {Modal, ModalBody} from 'reactstrap';\nimport LoginForm from './LoginForm';\n\nexport default class Login extends React.Component {\n  constructor() {\n    super ();\n    this.state = {\n      showModal: false,\n    };\n  }\n\n  toggleModal = () => {\n    this.setState (prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          className=\"btn btn-success\"\n          type=\"button\"\n          onClick={this.toggleModal}\n        >\n          Login\n        </button>\n        <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\n          <ModalBody>\n            <LoginForm\n              updateUser={this.props.updateUser}\n              updateSessionId={this.props.updateSessionId}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport UserMenu from './UserDropdown';\nimport Login from './Login/Login';\n\nclass Header extends React.Component {\n  render() {\n    const {user} = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"container\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Home</a>\n            </li>\n          </ul>\n          {user\n            ? <UserMenu />\n            : <Login updateSessionId={this.props.updateSessionId} updateUser={this.props.updateUser}/>}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends React.Component {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярные по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярные по возростанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возростанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render() {\n    const {sort_by, onChangeFilters, options} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilters}\n        >\n          {options.map (option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenresHOC from './GenresHOC';\n\nconst Genres = ({ genres, onChangeGenresFilters, with_genres }) => {\n  return (\n    <div>\n      {genres.map (genre => {\n        return (\n          <div className=\"form-check\" key={genre.id}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              onChange={onChangeGenresFilters}\n              name=\"with_genres\"\n              value={genre.id}\n              checked={with_genres.includes(genre.id.toString())}\n              id={genre.id}\n            />\n            <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n              {genre.name}\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nGenres.defaultProps = {\n  genres: []\n};\n\nGenres.propTypes = {\n  genres: PropTypes.array.isRequired\n};\n\nexport default GenresHOC(Genres);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {API_URL, API_KEY_3} from '../../api/api';\n\nexport default (Component) => class GenresHOC extends React.Component {\n  static propTypes = {\n    with_genres: PropTypes.array.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  constructor() {\n    super ();\n\n    this.state = {\n      genres: [],\n    };\n  }\n\n  onChangeGenresFilters = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const with_genres = this.props.with_genres;\n\n    this.props.onChangeFilters ({\n      target: {\n        name,\n        value: with_genres.includes (value)\n          ? with_genres.filter (genre => genre !== value)\n          : [...with_genres, value],\n      },\n    });\n  };\n\n  getGenres = () => {\n    const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\n\n    fetch (link)\n      .then (response => {\n        return response.json ();\n      })\n      .then (data => {\n        this.setState ({\n          genres: data.genres,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getGenres ();\n  }\n\n  render() {\n    return (\n      <Component\n        genres={this.state.genres}\n        onChangeGenresFilters={this.onChangeGenresFilters}\n        with_genres={this.props.with_genres}\n      />\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst year = new Date ().getFullYear ();\nconst years = Array.from (new Array (20), (val, index) => year - index);\n\nexport default class SortByYear extends React.Component {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {primary_release_year, onChangeFilters} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год выпуска:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilters}\n        >\n          {years.map (year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Pagination extends React.Component {\n  paginationBack = () => {\n    const {onChangePagination, page} = this.props;\n    return onChangePagination ({name: 'page', value: page - 1});\n  };\n\n  paginationForward = () => {\n    const {onChangePagination, page} = this.props;\n    return onChangePagination ({name: 'page', value: page + 1});\n  };\n\n  render() {\n    const {page, total_pages} = this.props;\n\n    return (\n      <div>\n        <div\n          className=\"btn-group btn-block\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            disabled={page === 1}\n            onClick={this.paginationBack}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={this.paginationForward}\n          >\n            Вперед\n          </button>\n        </div>\n        <p className=\"text-center p-3 text-center\">{`${page} из ${total_pages}`}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ResetFilters extends React.Component {\n  static propTypes = {\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div\n        className=\"btn-group btn-block\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-block\"\n          onClick={this.props.resetFilters}\n        >\n          Сбросить фильтры\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport Genres from './Genres';\nimport SortByYear from './SortByYear';\nimport Pagination from '../Pagination/Pagination';\nimport ResetFilters from './ResetFilters';\n\nexport default class Filters extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n    onChangePagination: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      filters: {sort_by, primary_release_year, with_genres},\n      pagination: {page, total_pages},\n      onChangePagination,\n      resetFilters,\n      onChangeFilters,\n    } = this.props;\n\n    return (\n      <form className=\"mb-3\">\n        <SortBy\n          sort_by={sort_by}\n          onChangeFilters={onChangeFilters}\n        />\n        <SortByYear\n          primary_release_year={primary_release_year}\n          onChangeFilters={onChangeFilters}\n        />\n        <Genres\n          with_genres={with_genres}\n          onChangeFilters={onChangeFilters}\n        />\n        <Pagination\n          onChangePagination={onChangePagination}\n          total_pages={total_pages}\n          page={page}\n        />\n        <ResetFilters\n          resetFilters={resetFilters}\n        />\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport {API_URL, API_KEY_3, fetchApi} from '../../api/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Star, StarBorder } from '@material-ui/icons';\nimport {AppContext} from \"../App\";\n\nclass Favorite extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isFavorite: null,\n    }\n  }\n\n  addToFav = (item, session_id) => {\n    // console.log(item);\n    fetchApi(`${API_URL}/account/7933447/favorite?api_key=${API_KEY_3}&session_id=${session_id}`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        media_type: 'movie',\n        media_id: item.id,\n        favorite: true\n      })\n    }).then(() => {\n      this.setState({\n        isFavorite: true\n      })\n    })\n  };\n\n  removeFromFav = (item, session_id) => {\n    // console.log(item);\n    fetchApi(`${API_URL}/account/7933447/favorite?api_key=${API_KEY_3}&session_id=${session_id}`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        media_type: 'movie',\n        media_id: item.id,\n        favorite: false\n      })\n    }).then(() => {\n      this.setState({\n        isFavorite: false\n      })\n    })\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.favoritesMovies !== prevProps.favoritesMovies) {\n      const {item, favoritesMovies} = this.props;\n      if (favoritesMovies) {\n        let favoritesMoviesIds = favoritesMovies.map(movie => {\n          return movie.id;\n        });\n        // console.log(favoritesMoviesIds);\n        if (favoritesMoviesIds.includes(item.id)) {\n          this.setState({\n            isFavorite: true\n          })\n        } else {\n          this.setState({\n            isFavorite: false\n          })\n        }\n      }\n    }\n  }\n\n  render() {\n    const {isFavorite} = this.state;\n    const {item, session_id} = this.props;\n    if (isFavorite) {\n      return (\n        <div>\n          <IconButton aria-label=\"\" onClick={() => this.removeFromFav(item, session_id)}>\n            <StarBorder />\n          </IconButton>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <IconButton aria-label=\"\" onClick={() => this.addToFav(item, session_id)}>\n            <Star />\n          </IconButton>\n        </div>\n      );\n    }\n  }\n}\n\nconst FavoriteContainer = (props) => {\n  return (\n    <AppContext.Consumer>\n      {(context) => {\n        return (\n          <Favorite\n            {...context}\n            {...props}\n          />\n        )\n      }}\n    </AppContext.Consumer>\n  )\n};\n\nFavoriteContainer.displayName = \"FavoriteContainer\";\n\nexport default FavoriteContainer;\n","import React from 'react';\nimport {API_URL, API_KEY_3, fetchApi} from '../../api/api';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Bookmark, BookmarkBorder } from '@material-ui/icons';\nimport {AppContext} from \"../App\";\n\nclass Watchlist extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isInWatchlist: null,\n    }\n  }\n\n  addToFav = (item, session_id) => {\n    // console.log(item);\n    fetchApi(`${API_URL}/account/7933447/watchlist?api_key=${API_KEY_3}&session_id=${session_id}`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        media_type: 'movie',\n        media_id: item.id,\n        watchlist: true\n      })\n    }).then(() => {\n      this.setState({\n        isInWatchlist: true\n      })\n    })\n  };\n\n  removeFromFav = (item, session_id) => {\n    // console.log(item);\n    fetchApi(`${API_URL}/account/7933447/watchlist?api_key=${API_KEY_3}&session_id=${session_id}`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        media_type: 'movie',\n        media_id: item.id,\n        watchlist: false\n      })\n    }).then(() => {\n      this.setState({\n        isInWatchlist: false\n      })\n    })\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.watchlistMovies !== prevProps.watchlistMovies) {\n      const {item, watchlistMovies} = this.props;\n      if (watchlistMovies) {\n        let watchlistMoviesIds = watchlistMovies.map(movie => {\n          return movie.id;\n        });\n        // console.log(watchlistMoviesIds);\n        if (watchlistMoviesIds.includes(item.id)) {\n          this.setState({\n            isInWatchlist: true\n          })\n        } else {\n          this.setState({\n            isInWatchlist: false\n          })\n        }\n      }\n    }\n  }\n\n  render() {\n    const {isInWatchlist} = this.state;\n    const {item, session_id} = this.props;\n    if (isInWatchlist) {\n      return (\n        <div>\n          <IconButton aria-label=\"\" onClick={() => this.removeFromFav(item, session_id)}>\n            <BookmarkBorder />\n          </IconButton>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <IconButton aria-label=\"\" onClick={() => this.addToFav(item, session_id)}>\n            <Bookmark />\n          </IconButton>\n        </div>\n      );\n    }\n  }\n}\n\nconst WatchlistContainer = (props) => {\n  return (\n    <AppContext.Consumer>\n      {(context) => {\n        return (\n          <Watchlist\n            {...context}\n            {...props}\n          />\n        )\n      }}\n    </AppContext.Consumer>\n  )\n};\n\nWatchlistContainer.displayName = \"WatchlistContainer\";\n\nexport default WatchlistContainer;\n","import React from 'react';\nimport {ButtonGroup} from 'reactstrap';\nimport Favorite from './Favorite';\nimport Watchlist from './Watchlist';\n\nconst MovieItem = (props) => {\n  const {item} = props;\n  return (\n    <div className=\"card\" style={{width: '100%'}}>\n      <img\n        className=\"card-img-top card-img--height\"\n        src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || item.poster_path}`}\n        alt=\"\"\n      />\n      <div className=\"card-body\">\n        <h6 className=\"card-title\">{item.title}</h6>\n        <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n        <div className=\"card-text\">Релиз: {item.release_date}</div>\n      </div>\n      <ButtonGroup>\n        <Favorite item={item}/>\n        <Watchlist item={item}/>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport MovieItem from './MovieItem';\nimport { Spinner } from 'reactstrap';\nimport PropsTypes from 'prop-types';\nimport MoviesHOC from './MoviesHOC';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <div>\n      <div className=\"loader-wrapper\">\n        {movies.length === 0 && <Spinner color=\"primary\" />}\n      </div>\n      <div className=\"row\">\n        {movies.map (movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  )\n};\n\nMoviesList.defaulProps = {\n  movies: []\n};\n\nMoviesList.propTypes = {\n  movies: PropsTypes.array.isRequired\n};\n\nexport default MoviesHOC(MoviesList);\n","import React, {Component} from 'react';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport CallApi, {API_URL, API_KEY_3} from '../../api/api';\n\nexport default (Component) => class MoviesHOC extends React.Component {\n  constructor() {\n    super ();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  getMovies = (filters, pagination) => {\n    const {sort_by, primary_release_year, with_genres} = filters;\n    const {page} = pagination;\n    const queryStringParams = {\n      \"api_key\": API_KEY_3,\n      \"sort_by\":sort_by,\n      \"page\": page,\n      \"primary_release_year\": primary_release_year,\n      \"with_genres\": with_genres,\n      \"language\": \"ru-RU\"\n    };\n\n    CallApi.get('/discover/movie', {\n      params: queryStringParams\n    })\n      .then (data => {\n        this.setState ({\n          movies: data.results,\n        });\n        this.props.onChangePagination ({\n          name: 'total_pages',\n          value: data.total_pages,\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getMovies (this.props.filters, this.props.pagination);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual (this.props.filters, prevProps.filters)) {\n      this.getMovies (this.props.filters, 1);\n      this.props.onChangePagination (1);\n    }\n\n    if (this.props.pagination.page !== prevProps.pagination.page) {\n      this.getMovies (this.props.filters, this.props.pagination);\n    }\n  }\n\n  render() {\n    const {movies} = this.state;\n    return (\n      <Component movies={movies} />\n    );\n  }\n}\n","import React from 'react';\nimport Header from './Header/Header';\nimport Filters from './Filters/Filters';\nimport MoviesList from './Movies/MoviesList';\nimport Cookies from 'universal-cookie';\nimport {API_URL, API_KEY_3, fetchApi} from '../api/api';\n\nconst cookies = new Cookies ();\n\nexport const AppContext = React.createContext();\n\nexport default class App extends React.Component {\n  constructor() {\n    super ();\n\n    this.state = {\n      user: null,\n      favoritesMovies: null,\n      watchlistMovies: null,\n      session_id: null,\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    };\n  }\n\n  updateUser = user => {\n    this.setState ({user});\n  };\n\n  updateSessionId = session_id => {\n    cookies.set ('session_id', session_id, {path: '/', maxAge: 2592000});\n    this.setState ({session_id});\n  };\n\n  updateFavoritesMovies = favoritesMovies => {\n    this.setState ({favoritesMovies});\n  };\n\n  updateWatchlistMovies = watchlistMovies => {\n    this.setState ({watchlistMovies});\n  };\n\n\n  onLogOut = () => {\n    cookies.remove('session_id');\n    this.setState({\n      session_id: null,\n      user: null\n    })\n  };\n\n  onChangeFilters = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const newFilters = {\n      ...this.state.filters,\n      [name]: value,\n    };\n    this.setState ({\n      filters: newFilters,\n    });\n  };\n\n  resetFilters = () => {\n    this.setState (prevProps => ({\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    }));\n  };\n\n  onChangePagination = ({name, value}) => {\n    this.setState (prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        [name]: value,\n      },\n    }));\n  };\n\n  componentDidMount() {\n    const session_id = cookies.get ('session_id');\n    if (session_id) {\n      fetchApi (\n        `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`\n      ).then (user => {\n        this.updateUser (user);\n        this.updateSessionId(session_id);\n      }).then( () => {\n          fetchApi (\n            `${API_URL}/account/${this.state.user.id}/favorite/movies?api_key=${API_KEY_3}&session_id=${session_id}`\n          ).then (favoritesMovies => {\n            this.updateFavoritesMovies (favoritesMovies.results);\n            console.log('favoritesMovies');\n            console.log(favoritesMovies.results);\n          })\n        }\n      ).then( () => {\n          fetchApi (\n            `${API_URL}/account/${this.state.user.id}/watchlist/movies?api_key=${API_KEY_3}&session_id=${session_id}`\n          ).then (watchlistMovies => {\n            this.updateWatchlistMovies (watchlistMovies.results);\n            console.log('watchlistMovies');\n            console.log(watchlistMovies.results);\n          })\n        }\n      )\n    }\n  }\n\n  render() {\n    const {filters, pagination, page, total_pages, user, session_id, favoritesMovies, watchlistMovies} = this.state;\n    return (\n      <AppContext.Provider value={{\n        user,\n        favoritesMovies,\n        watchlistMovies,\n        session_id,\n        updateUser: this.updateUser,\n        updateSessionId: this.updateSessionId,\n        onLogOut: this.onLogOut\n      }}>\n        <div>\n          <Header\n            updateUser={this.updateUser}\n            updateSessionId={this.updateSessionId}\n            user={user}\n          />\n          <div className=\"container\">\n            <div className=\"row mt-4\">\n              <div className=\"col-4\">\n                <div className=\"card\" style={{width: '100%'}}>\n                  <div className=\"card-body\">\n                    <h3>Фильтры:</h3>\n                    <Filters\n                      page={page}\n                      total_pages={total_pages}\n                      pagination={pagination}\n                      filters={filters}\n                      resetFilters={this.resetFilters}\n                      onChangePagination={this.onChangePagination}\n                      onChangeFilters={this.onChangeFilters}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-8\">\n                <MoviesList\n                  pagination={pagination}\n                  movies={this.state.movies}\n                  getMovies={this.getMovies}\n                  filters={this.state.filters}\n                  onChangePagination={this.onChangePagination}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}