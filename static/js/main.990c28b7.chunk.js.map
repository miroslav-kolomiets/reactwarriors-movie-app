{"version":3,"sources":["components/Filters/SortBy.jsx","api/api.js","components/Filters/Genres.jsx","components/Filters/SortByYear.jsx","components/Pagination/Pagination.jsx","components/Filters/ResetFilters.jsx","components/Filters/Filters.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/App.jsx","index.js"],"names":["SortBy","_this$props","this","props","sort_by","onChangeFilters","options","react_default","a","createElement","className","htmlFor","id","name","value","onChange","map","option","key","label","React","Component","defaultProps","API_URL","API_KEY_3","Genres","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeGenresFilters","event","target","with_genres","includes","filter","genre","concat","toConsumableArray","getGenres","link","fetch","then","response","json","data","setState","genres","state","_this2","type","year","Date","getFullYear","years","Array","from","val","index","SortByYear","primary_release_year","Pagination","page","total_pages","onChangePagination","role","aria-label","disabled","onClick","ResetFilters","resetFilters","Filters","_this$props$filters","filters","_this$props$paginatio","pagination","SortBy_SortBy","SortByYear_SortByYear","Genres_Genres","Pagination_Pagination","ResetFilters_ResetFilters","MovieItem","item","style","width","src","backdrop_path","poster_path","alt","title","vote_average","release_date","MovieList","getMovies","movies","results","prevProps","_","isEqual","movie","MovieItem_MovieItem","App","newFilters","objectSpread","defineProperty","_ref","prevState","_this$state","Filters_Filters","MoviesList_MovieList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.990c28b7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SortBy extends React.Component {\n  static propTypes = {\n    sort_by: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    options: [\n      {\n        label: 'Популярные по убыванию',\n        value: 'popularity.desc',\n      },\n      {\n        label: 'Популярные по возростанию',\n        value: 'popularity.asc',\n      },\n      {\n        label: 'Рейтинг по убыванию',\n        value: 'vote_average.desc',\n      },\n      {\n        label: 'Рейтинг по возростанию',\n        value: 'vote_average.asc',\n      },\n    ],\n  };\n\n  render () {\n    const {sort_by, onChangeFilters, options} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\n        <select\n          className=\"form-control\"\n          id=\"sort_by\"\n          name=\"sort_by\"\n          value={sort_by}\n          onChange={onChangeFilters}\n        >\n          {options.map (option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","export const API_URL = 'https://api.themoviedb.org/3';\n\nexport const API_KEY_3 = '5265606bb69e99437c85eb04dc6f29b5';\n\nexport const API_KEY_4 =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MjY1NjA2YmI2OWU5OTQzN2M4NWViMDRkYzZmMjliNSIsInN1YiI6IjViMjdkM2IwMGUwYTI2NjcwOTAxY2JlMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Io03eoINOt7D4nPuexS3qHeD371BOBaFsz8Oz2cJlNM';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {API_URL, API_KEY_3} from '../../api/api';\n\nexport default class Genres extends React.Component {\n  static propTypes = {\n    with_genres: PropTypes.array.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  constructor () {\n    super ();\n\n    this.state = {\n      genres: [],\n    };\n  }\n\n  onChangeGenresFilters = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const with_genres = this.props.with_genres;\n\n    this.props.onChangeFilters ({\n      target: {\n        name,\n        value: with_genres.includes (value)\n          ? with_genres.filter (genre => genre !== value)\n          : [...with_genres, value],\n      },\n    });\n  };\n\n  getGenres = () => {\n    const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\n\n    fetch (link)\n      .then (response => {\n        return response.json ();\n      })\n      .then (data => {\n        this.setState ({\n          genres: data.genres,\n        });\n      });\n  };\n\n  componentDidMount () {\n    this.getGenres ();\n  }\n\n  render () {\n    const {genres} = this.state;\n    return (\n      <div>\n        {genres.map (genre => {\n          return (\n            <div className=\"form-check\" key={genre.id}>\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                onChange={this.onChangeGenresFilters}\n                name=\"with_genres\"\n                value={genre.id}\n                id={genre.id}\n              />\n              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                {genre.name}\n              </label>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst year = new Date ().getFullYear ();\nconst years = Array.from (new Array (20), (val, index) => year - index);\n\nexport default class SortByYear extends React.Component {\n  static propTypes = {\n    primary_release_year: PropTypes.string.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n  };\n\n  render () {\n    const {primary_release_year, onChangeFilters} = this.props;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"primary_release_year\">Год выпуска:</label>\n        <select\n          className=\"form-control\"\n          id=\"primary_release_year\"\n          name=\"primary_release_year\"\n          value={primary_release_year}\n          onChange={onChangeFilters}\n        >\n          {years.map (year => {\n            return (\n              <option key={year} value={year}>\n                {year}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Pagination extends React.Component {\n  render () {\n    const {page, total_pages, onChangePagination} = this.props;\n\n    return (\n      <div>\n        <div\n          className=\"btn-group btn-block\"\n          role=\"group\"\n          aria-label=\"Basic example\"\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            disabled={page === 1}\n            onClick={() =>\n              onChangePagination ({\n                name: 'page',\n                value: page - 1,\n              })}\n          >\n            Назад\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-light\"\n            onClick={() =>\n              onChangePagination ({\n                name: 'page',\n                value: page + 1,\n              })}\n          >\n            Вперед\n          </button>\n        </div>\n        <p className=\"text-center p-3 text-center\">{`${page} из ${total_pages}`}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ResetFilters extends React.Component {\n  static propTypes = {\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <div\n        className=\"btn-group btn-block\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        <button\n          type=\"button\"\n          className=\"btn btn-light btn-block\"\n          onClick={this.props.resetFilters}\n        >\n          Сбросить фильтры\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortBy from './SortBy';\nimport Genres from './Genres';\nimport SortByYear from './SortByYear';\nimport Pagination from '../Pagination/Pagination';\nimport ResetFilters from './ResetFilters';\n\nexport default class Filters extends React.Component {\n  static propTypes = {\n    filters: PropTypes.object.isRequired,\n    onChangeFilters: PropTypes.func.isRequired,\n    onChangePagination: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n  };\n\n  render () {\n    const {\n      filters: {sort_by, primary_release_year, with_genres},\n      pagination: {page, total_pages},\n      onChangePagination,\n      resetFilters,\n      onChangeFilters,\n    } = this.props;\n\n    return (\n      <form className=\"mb-3\">\n        <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters} />\n        <SortByYear\n          primary_release_year={primary_release_year}\n          onChangeFilters={onChangeFilters}\n        />\n        <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\n        <Pagination\n          onChangePagination={onChangePagination}\n          total_pages={total_pages}\n          page={page}\n        />\n        <ResetFilters resetFilters={resetFilters} />\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MovieItem extends React.Component {\n  render () {\n    const {item} = this.props;\n    return (\n      <div className=\"card\" style={{width: '100%'}}>\n        <img\n          className=\"card-img-top card-img--height\"\n          src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || item.poster_path}`}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{item.title}</h6>\n          <div className=\"card-text\">Рейтинг: {item.vote_average}</div>\n          <div className=\"card-text\">Релиз: {item.release_date}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport MovieItem from './MovieItem';\nimport {API_URL, API_KEY_3} from '../../api/api';\nimport _ from 'lodash';\n\nexport default class MovieList extends Component {\n  constructor () {\n    super ();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  getMovies = (filters, pagination) => {\n    const {sort_by, primary_release_year, with_genres} = filters;\n    const {page} = pagination;\n    const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}&page=${page}&primary_release_year=${primary_release_year}&with_genres=${with_genres}`;\n\n    fetch (link)\n      .then (response => {\n        return response.json ();\n      })\n      .then (data => {\n        this.setState ({\n          movies: data.results,\n        });\n        this.props.onChangePagination ({\n          name: 'total_pages',\n          value: data.total_pages,\n        });\n      });\n  };\n\n  componentDidMount () {\n    this.getMovies (this.props.filters, this.props.pagination);\n  }\n\n  componentDidUpdate (prevProps) {\n    if (!_.isEqual (this.props.filters, prevProps.filters)) {\n      this.getMovies (this.props.filters, 1);\n      this.props.onChangePagination (1);\n    }\n\n    if (this.props.pagination.page !== prevProps.pagination.page) {\n      this.getMovies (this.props.filters, this.props.pagination);\n    }\n  }\n\n  render () {\n    const movies = this.state.movies;\n    return (\n      <div className=\"row\">\n        {movies.map (movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Filters from './Filters/Filters';\nimport MoviesList from './Movies/MoviesList';\n\nexport default class App extends React.Component {\n  constructor () {\n    super ();\n\n    this.state = {\n      filters: {\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n      pagination: {\n        page: 1,\n        total_pages: 0,\n      },\n    };\n  }\n\n  onChangeFilters = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    const newFilters = {\n      ...this.state.filters,\n      [name]: value,\n    };\n    this.setState ({\n      filters: newFilters,\n    });\n  };\n\n  resetFilters = () => {\n    this.setState (prevProps => ({\n      filters: {\n        ...prevProps.filters,\n        sort_by: 'popularity.desc',\n        primary_release_year: '',\n        with_genres: [],\n      },\n    }));\n  };\n\n  onChangePagination = ({name, value}) => {\n    this.setState (prevState => ({\n      pagination: {\n        ...prevState.pagination,\n        [name]: value,\n      },\n    }));\n  };\n\n  render () {\n    const {filters, pagination} = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-4\">\n            <div className=\"card\" style={{width: '100%'}}>\n              <div className=\"card-body\">\n                <h3>Фильтры:</h3>\n                <Filters\n                  pagination={pagination}\n                  filters={filters}\n                  resetFilters={this.resetFilters}\n                  onChangePagination={this.onChangePagination}\n                  onChangeFilters={this.onChangeFilters}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-8\">\n            <MoviesList\n              pagination={pagination}\n              movies={this.state.movies}\n              getMovies={this.getMovies}\n              filters={this.state.filters}\n              onChangePagination={this.onChangePagination}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}